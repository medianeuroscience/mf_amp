mutate_at(vars(contains("MFQ")), funs(as.numeric)) %>%
mutate(care_mean = rowMeans(select(., starts_with("MFQ_care")), na.rm=TRUE),
fair_mean = rowMeans(select(., starts_with("MFQ_fair")), na.rm=TRUE),
loyal_mean = rowMeans(select(., starts_with("MFQ_loyalty")), na.rm=TRUE),
auth_mean = rowMeans(select(., starts_with("MFQ_authority")), na.rm=TRUE),
sanc_mean = rowMeans(select(., starts_with("MFQ_purity")), na.rm=TRUE),
MFQ_var = matrixStats::rowVars(as.matrix(select(., starts_with("MFQ"))), na.rm=TRUE))
surveydata_w <- surveydata_w %>%
mutate(MFQ_mean = rowMeans(select(., care_mean, fair_mean, loyal_mean, auth_mean, sanc_mean), na.rm=TRUE))
# Chunk 18
vars <- c(1003, 1020, 1021, 1035, 1040, 1044, 1045, 1060)
surveydata_w <- surveydata_w %>%
filter(!(participant %in% vars))
# Chunk 19
plot_data <- surveydata_w %>% gather("domain", "domain_mean", c("care_mean", "fair_mean", "loyal_mean", "auth_mean", "sanc_mean")) %>% group_by(domain) %>% summarize(salience = mean(domain_mean), sd_salience = sd(domain_mean), n = n())
ggplot(plot_data, aes(x = domain, y = salience, fill = domain)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin=salience-sd_salience, ymax=salience+sd_salience), width=.2,
position=position_dodge(.9))
# Chunk 20
plot_data <- surveydata_w %>%
gather("domain", "domain_mean", c("care_mean", "fair_mean", "loyal_mean", "auth_mean", "sanc_mean")) %>%
group_by(domain, sex) %>% filter(sex == 1 | sex == 2) %>%
summarize(salience = mean(domain_mean), sd_salience = sd(domain_mean), n = n())
ggplot(plot_data, aes(x = domain, y = salience, fill = domain)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin=salience-sd_salience, ymax=salience+sd_salience), width=.2,
position=position_dodge(.9)) +
facet_wrap(. ~ sex)
# Chunk 21
surveydata_w_part <- surveydata_w %>%
select(participant,
care_mean,
fair_mean,
loyal_mean,
auth_mean,
sanc_mean,
MFQ_mean,
sex,
pol_or,
nat_speak1,
religion,
handed)
fulldata <- left_join(expdata_rtfilt, surveydata_w_part, by = "participant")
# Chunk 22
plot_data <- fulldata %>%
filter(task == "LDT") %>%
group_by(participant, words) %>%
summarize(meanrt = mean(RT),
meancorr = mean(corr),
salience = mean(MFQ_mean),
wordcat = paste(unique(wordcat), collapse = ', ')) %>%
filter(meanrt <= 1.5)
ggplot(plot_data, aes(x = salience, y = meanrt)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x) +
facet_wrap(. ~ wordcat)
ggplot(plot_data, aes(x = salience, y = meancorr)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x) +
facet_wrap(. ~ wordcat)
# Chunk 23
plot_data <- fulldata %>%
group_by(participant, nat_speak1) %>%
summarize(meancorr = mean(corr), meanrt = mean(RT)) %>%
filter(nat_speak1 == 1 | nat_speak1 == 2)
ggplot(plot_data, aes(x = meanrt, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
ggplot(plot_data, aes(x = meancorr, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
# Chunk 24
plot_data <- fulldata %>%
group_by(participant, words) %>%
filter(task == "LDT") %>%
summarize(meanrt = mean(RT),
meancorr = mean(corr),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(foundation), collapse = ', '),
valence = paste(unique(valence), collapse = ', '),
n = n())
p1 = ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meancorr, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p2 = ggplot(data = filter(plot_data, foundation == "fairness"), aes(x = fair_sal, y = meancorr, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p3 = ggplot(data = filter(plot_data, foundation == "loyalty"), aes(x = loyal_sal, y = meancorr, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p4 = ggplot(data = filter(plot_data, foundation == "authority"), aes(x = auth_sal, y = meancorr, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p5 = ggplot(data = filter(plot_data, foundation == "sanctity"), aes(x = sanc_sal, y = meancorr, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
grid.arrange(p1, p2, p3, p4, p5, ncol = 2)
AMP_trials <- fulldata %>%
filter(task == "AMP") %>%
mutate(subnum = participant) %>%
unite("sub_trial", "subnum", "trialnum", sep = "_")
AMP_trials <- fulldata %>%
filter(task == "AMP") %>%
mutate(subnum = participant) %>%
unite("sub_trial", "subnum", "trialnum", sep = "_")
expdata_rtfilt$trialnum
df <- expdata_w %>% filter(task == "AMP" | task == "LDT")
df_indouts <- df %>%
group_by(participant, task) %>%
select(participant,
RT,
foundation,
valence,
wordcat,
task,
words,
corr,
trialnum) %>%
mutate_if(is.numeric, funs(mad = out_mad))
df_indouts$trialnum
df_indouts <- df %>%
group_by(participant, task) %>%
select(participant,
RT,
foundation,
valence,
wordcat,
task,
words,
corr,
trialnum) %>%
mutate_if(is.numeric, funs(mad = out_mad))
# Filtering based on that column
expdata_rtfilt <- filter(df_indouts, RT_mad == FALSE)
ggplot(expdata_rtfilt, aes(x = RT)) + geom_histogram()
surveydata_w_part <- surveydata_w %>%
select(participant,
care_mean,
fair_mean,
loyal_mean,
auth_mean,
sanc_mean,
MFQ_mean,
sex,
pol_or,
nat_speak1,
religion,
handed)
fulldata <- left_join(expdata_rtfilt, surveydata_w_part, by = "participant")
plot_data <- fulldata %>%
filter(task == "LDT") %>%
group_by(participant, words) %>%
summarize(meanrt = mean(RT),
meancorr = mean(corr),
salience = mean(MFQ_mean),
wordcat = paste(unique(wordcat), collapse = ', ')) %>%
filter(meanrt <= 1.5)
ggplot(plot_data, aes(x = salience, y = meanrt)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x) +
facet_wrap(. ~ wordcat)
ggplot(plot_data, aes(x = salience, y = meancorr)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x) +
facet_wrap(. ~ wordcat)
plot_data <- fulldata %>%
group_by(participant, nat_speak1) %>%
summarize(meancorr = mean(corr), meanrt = mean(RT)) %>%
filter(nat_speak1 == 1 | nat_speak1 == 2)
ggplot(plot_data, aes(x = meanrt, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
ggplot(plot_data, aes(x = meancorr, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
AMP_trials <- fulldata %>%
filter(task == "AMP") %>%
mutate(subnum = participant) %>%
unite("sub_trial", "subnum", "trialnum", sep = "_")
AMP_trials_long <- AMP_trials %>%
rename("prime_cat" = "wordcat",
"prime_foundation" = "foundation",
"prime_val" = "valence") %>%
gather("prime_target", "words", "words", "nonwords") %>%
mutate(prime_target = ifelse(prime_target == "words", "prime",
ifelse(prime_target == "nonwords", "target", NA)),
val_response = ifelse(keypress == "left", -1, 1),
prime_val = ifelse(is.na(prime_val), "nonword", prime_val)) %>%
arrange(by = sub_trial) %>%
select(-c(LDT_rating.response, AMP_loop.thisN, AMP_trials.thisN, tweets, topic))
df_indouts <- df %>%
group_by(participant, task) %>%
select(participant,
RT,
foundation,
valence,
wordcat,
task,
words,
corr,
trialnum,
nonwords) %>%
mutate_if(is.numeric, funs(mad = out_mad))
# Filtering based on that column
expdata_rtfilt <- filter(df_indouts, RT_mad == FALSE)
ggplot(expdata_rtfilt, aes(x = RT)) + geom_histogram()
surveydata_w_part <- surveydata_w %>%
select(participant,
care_mean,
fair_mean,
loyal_mean,
auth_mean,
sanc_mean,
MFQ_mean,
sex,
pol_or,
nat_speak1,
religion,
handed)
fulldata <- left_join(expdata_rtfilt, surveydata_w_part, by = "participant")
AMP_trials <- fulldata %>%
filter(task == "AMP") %>%
mutate(subnum = participant) %>%
unite("sub_trial", "subnum", "trialnum", sep = "_")
AMP_trials_long <- AMP_trials %>%
rename("prime_cat" = "wordcat",
"prime_foundation" = "foundation",
"prime_val" = "valence") %>%
gather("prime_target", "words", "words", "nonwords") %>%
mutate(prime_target = ifelse(prime_target == "words", "prime",
ifelse(prime_target == "nonwords", "target", NA)),
val_response = ifelse(keypress == "left", -1, 1),
prime_val = ifelse(is.na(prime_val), "nonword", prime_val)) %>%
arrange(by = sub_trial) %>%
select(-c(LDT_rating.response, AMP_loop.thisN, AMP_trials.thisN, tweets, topic))
df_indouts <- df %>%
group_by(participant, task) %>%
select(participant,
RT,
foundation,
valence,
wordcat,
task,
words,
corr,
trialnum,
nonwords,
keypress) %>%
mutate_if(is.numeric, funs(mad = out_mad))
# Filtering based on that column
expdata_rtfilt <- filter(df_indouts, RT_mad == FALSE)
ggplot(expdata_rtfilt, aes(x = RT)) + geom_histogram()
surveydata_w_part <- surveydata_w %>%
select(participant,
care_mean,
fair_mean,
loyal_mean,
auth_mean,
sanc_mean,
MFQ_mean,
sex,
pol_or,
nat_speak1,
religion,
handed)
fulldata <- left_join(expdata_rtfilt, surveydata_w_part, by = "participant")
AMP_trials <- fulldata %>%
filter(task == "AMP") %>%
mutate(subnum = participant) %>%
unite("sub_trial", "subnum", "trialnum", sep = "_")
AMP_trials_long <- AMP_trials %>%
rename("prime_cat" = "wordcat",
"prime_foundation" = "foundation",
"prime_val" = "valence") %>%
gather("prime_target", "words", "words", "nonwords") %>%
mutate(prime_target = ifelse(prime_target == "words", "prime",
ifelse(prime_target == "nonwords", "target", NA)),
val_response = ifelse(keypress == "left", -1, 1),
prime_val = ifelse(is.na(prime_val), "nonword", prime_val)) %>%
arrange(by = sub_trial) %>%
select(-c(LDT_rating.response, AMP_loop.thisN, AMP_trials.thisN, tweets, topic))
AMP_trials_long <- AMP_trials %>%
rename("prime_cat" = "wordcat",
"prime_foundation" = "foundation",
"prime_val" = "valence") %>%
gather("prime_target", "words", "words", "nonwords") %>%
mutate(prime_target = ifelse(prime_target == "words", "prime",
ifelse(prime_target == "nonwords", "target", NA)),
val_response = ifelse(keypress == "left", -1, 1),
prime_val = ifelse(is.na(prime_val), "nonword", prime_val)) %>%
arrange(by = sub_trial)
View(AMP_trials_long)
plot_data <- AMP_trials_long %>%
group_by(prime_cat, prime_val) %>%
filter(prime_target == "prime") %>%
summarize(meanval = mean(val_response), meanrt = mean(RT))
plot_data
plot_data <- AMP_trials_long %>%
group_by(participant, prime_cat, prime_val) %>%
filter(prime_target == "prime") %>%
summarize(meanval = mean(val_response),
meanrt = mean(RT),
salience = mean(MFQ_mean))
plot_data
plot_data <- AMP_trials_long %>%
group_by(participant, words, prime_cat, prime_val) %>%
filter(prime_target == "prime") %>%
summarize(meanval = mean(val_response),
meanrt = mean(RT),
salience = mean(MFQ_mean))
plot_data
plot_data <- AMP_trials_long %>%
filter(prime_cat == "moralword") %>%
group_by(participant, words, prime_val) %>%
filter(prime_target == "prime") %>%
summarize(meanval = mean(val_response),
meanrt = mean(RT),
salience = mean(MFQ_mean))
ggplot(plot_data, aes(x = salience, y = meanval)) + geom_scatter() + facet_wrap(. ~ prime_val)
ggplot(plot_data, aes(x = salience, y = meanval)) + geom_point() + facet_wrap(. ~ prime_val)
ggplot(plot_data, aes(x = salience, y = meanval)) +
geom_point() +
geom_smooth(method = "lm", formula = y~x) +
facet_wrap(. ~ prime_val)
plot_data <- AMP_trials_long %>%
filter(prime_cat == "moralword") %>%
group_by(participant, prime_val) %>%
filter(prime_target == "prime") %>%
summarize(meanval = mean(val_response),
meanrt = mean(RT),
salience = mean(MFQ_mean))
ggplot(plot_data, aes(x = salience, y = meanval)) +
geom_point() +
geom_smooth(method = "lm", formula = y~x) +
facet_wrap(. ~ prime_val)
plot_data
df <- plot_data %>% filter(prime_val == "negative")
Hmisc::rcorr(df$salience, df$meanval)
plot_data <- AMP_trials_long %>%
group_by(participant, words) %>%
summarize(meanrt = mean(RT),
meancorr = mean(corr),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(foundation), collapse = ', '),
valence = paste(unique(valence), collapse = ', '),
n = n())
plot_data <- AMP_trials_long %>%
group_by(participant, words) %>%
summarize(meanrt = mean(RT),
meancorr = mean(corr),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(prime_foundation), collapse = ', '),
valence = paste(unique(prime_val), collapse = ', '),
n = n())
plot_data
plot_data <- AMP_trials_long %>%
group_by(participant, words) %>%
summarize(meanrt = mean(RT),
meanval = mean(val_response),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(prime_foundation), collapse = ', '),
valence = paste(unique(prime_val), collapse = ', '),
n = n())
plot_data
p1 = ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p2 = ggplot(data = filter(plot_data, foundation == "fairness"), aes(x = fair_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p3 = ggplot(data = filter(plot_data, foundation == "loyalty"), aes(x = loyal_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p4 = ggplot(data = filter(plot_data, foundation == "authority"), aes(x = auth_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p5 = ggplot(data = filter(plot_data, foundation == "sanctity"), aes(x = sanc_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
grid.arrange(p1, p2, p3, p4, p5, ncol = 2)
ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
summarize(meanrt = mean(RT),
meanval = mean(val_response),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(prime_foundation), collapse = ', '),
valence = paste(unique(prime_val), collapse = ', '),
n = n())
plot_data <- AMP_trials_long %>%
group_by(participant, words) %>%
filter(prime_target == "prime") %>%
summarize(meanrt = mean(RT),
meanval = mean(val_response),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(prime_foundation), collapse = ', '),
valence = paste(unique(prime_val), collapse = ', '),
n = n())
ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
View(plot_data)
p1 <- ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p2 <- ggplot(data = filter(plot_data, foundation == "fairness"), aes(x = fair_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p3 <- ggplot(data = filter(plot_data, foundation == "loyalty"), aes(x = loyal_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p4 <- ggplot(data = filter(plot_data, foundation == "authority"), aes(x = auth_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p5 <- ggplot(data = filter(plot_data, foundation == "sanctity"), aes(x = sanc_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
grid.arrange(p1, p2, p3, p4, p5, ncol = 2)
plot_data <- AMP_trials_long %>%
group_by(words) %>%
filter(prime_target == "prime") %>%
summarize(meanrt = mean(RT),
meanval = mean(val_response),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
foundation = paste(unique(prime_foundation), collapse = ', '),
valence = paste(unique(prime_val), collapse = ', '),
n = n())
ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
plot_data <- AMP_trials_long %>%
group_by(participant, prime_foundation, prime_val) %>%
filter(prime_target == "prime") %>%
summarize(meanrt = mean(RT),
meanval = mean(val_response),
care_sal = mean(care_mean),
fair_sal = mean(fair_mean),
loyal_sal = mean(loyal_mean),
auth_sal = mean(auth_mean),
sanc_sal = mean(sanc_mean),
n = n())
ggplot(data = filter(plot_data, foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
ggplot(data = filter(plot_data, prime_foundation == "care"), aes(x = care_sal, y = meanval, color = valence)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
ggplot(data = filter(plot_data, prime_foundation == "care"), aes(x = care_sal, y = meanval, color = prime_val)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
View(plot_data)
p1 <- ggplot(data = filter(plot_data, prime_foundation == "care"), aes(x = care_sal, y = meanval, color = prime_val)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p2 <- ggplot(data = filter(plot_data, prime_foundation == "fairness"), aes(x = fair_sal, y = meanval, color = prime_val)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p3 <- ggplot(data = filter(plot_data, prime_foundation == "loyalty"), aes(x = loyal_sal, y = meanval, color = prime_val)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p4 <- ggplot(data = filter(plot_data, prime_foundation == "authority"), aes(x = auth_sal, y = meanval, color = prime_val)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
p5 <- ggplot(data = filter(plot_data, prime_foundation == "sanctity"), aes(x = sanc_sal, y = meanval, color = prime_val)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x)
grid.arrange(p1, p2, p3, p4, p5, ncol = 2)
plot_data <- fulldata %>%
group_by(participant, nat_speak1) %>%
summarize(meancorr = mean(corr), meanrt = mean(RT)) %>%
filter(nat_speak1 == 1 | nat_speak1 == 2)
plt1 <- ggplot(plot_data, aes(x = meanrt, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
plt2 <- ggplot(plot_data, aes(x = meancorr, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
grid.arrange(p1, p2)
plot_data <- fulldata %>%
group_by(participant, nat_speak1) %>%
summarize(meancorr = mean(corr), meanrt = mean(RT)) %>%
filter(nat_speak1 == 1 | nat_speak1 == 2)
plt1 <- ggplot(plot_data, aes(x = meanrt, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
plt2 <- ggplot(plot_data, aes(x = meancorr, fill = nat_speak1, color = nat_speak1)) +
geom_density(alpha = .7)
grid.arrange(plt1, plt2)
grid.arrange(plt1, plt2, col = 2)
grid.arrange(plt1, plt2, ncol = 2)
