<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="3.0.3">
  <Settings>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1080]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="#FAFAFA" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="mf_amp" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial_2">
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="set every repeat" val="$category" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="break_3">
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="constant" val="Moving on..." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="AMP_nonword">
      <TextComponent name="AMP_nonwordstim">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_nonwordstim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".75" valType="code"/>
        <Param name="text" updates="set every repeat" val="$nonwords" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_AMP">
        <Param name="allowedKeys" updates="constant" val="'left','right',&quot;escape&quot;,&quot;n&quot;" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="AMP_maskstim">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_maskstim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.75" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3.25" valType="code"/>
        <Param name="text" updates="set every repeat" val="$masks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="AMP_word">
      <TextComponent name="AMP_wordstim">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_wordstim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".75" valType="code"/>
        <Param name="text" updates="set every repeat" val="$words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="gap_1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="gap_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.75" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".125" valType="code"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_3">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="os.remove(&quot;AMP_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr1">
      <TextComponent name="instr_1">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the Language and Emotion study!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="The goal of this experiment is to better understand how people react to language" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will be asked to complete three different tasks, followed by a short survey." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_4">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="18" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Before we begin, please make sure your fingers are on the correct keys." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_5">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="24" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Your right index finger should be on the left arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_6">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="28" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Your right ring finger should be on the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/keyboard_diagram.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="32" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_7">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="36" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="If you are ready to begin please press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_AMP_instr1">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_AMP_instr1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="36" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_11">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:         continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_11" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_AMP">
      <TextComponent name="instr_AMP1">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the first task!&amp;#10;&amp;#10;In this task, you will see a selection of words." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="After seeing each word, you will see a non-word." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="After this, you will see another blank screen and a string of symbols" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP4">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="18" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will rate whether the non-word made you feel positive or negative" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP5">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="24" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the non-word made you feel positive, press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP6">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="30" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the non-word made you feel negative, press the left arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_4">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="36" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_AMP7">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="42" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Remember you are rating the non-word, NOT the word that came before it." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP8">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="48" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Let's do a practice round." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP13">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP13" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="54" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="When you are ready to begin press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_AMP_ready1">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP_ready1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="54" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_12">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_12" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AMP_prac_word">
      <TextComponent name="AMP_wordstim_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_wordstim_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".75" valType="code"/>
        <Param name="text" updates="set every repeat" val="$words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="gap">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="gap" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.75" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".125" valType="code"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_4">
        <Param name="Begin Experiment" updates="constant" val="import random &amp;#10;import pandas as pd&amp;#10;import numpy as np&amp;#10;&amp;#10;# reading in the CSV so that I can generate the conditions file for the AMP&amp;#10;words = pd.read_csv(&quot;words4exp.csv&quot;)&amp;#10;&amp;#10;# Here are the row indices for all of the words in the full CSV.&amp;#10;&amp;#10;full_list = list(range(0,341)) &amp;#10;care_virtue = list(range(0,12)) &amp;#10;care_vice = list(range(12,24)) &amp;#10;fair_virtue = list(range(24,36)) &amp;#10;fair_vice = list(range(36,48)) &amp;#10;loyal_virtue = list(range(48,60)) &amp;#10;loyal_vice = list(range(60,72)) &amp;#10;auth_virtue = list(range(72,84)) &amp;#10;auth_vice = list(range(84,96)) &amp;#10;sanc_virtue = list(range(96,108)) &amp;#10;sanc_vice = list(range(108,120)) &amp;#10;neutral = list(range(120,170)) &amp;#10;nonword = list(range(170,340)) &amp;#10;control = [340,341]&amp;#10;&amp;#10;# Taking a sample from each category for the AMP&amp;#10;&amp;#10;care_virtue_amp = random.sample(care_virtue, 7)  &amp;#10;care_vice_amp = random.sample(care_vice, 7) &amp;#10;fair_virtue_amp = random.sample(fair_virtue, 7)  &amp;#10;fair_vice_amp = random.sample(fair_vice, 7) &amp;#10;loyal_virtue_amp = random.sample(loyal_virtue, 7)  &amp;#10;loyal_vice_amp = random.sample(loyal_vice, 7) &amp;#10;auth_virtue_amp = random.sample(auth_virtue, 7)  &amp;#10;auth_vice_amp = random.sample(auth_vice, 7) &amp;#10;sanc_virtue_amp = random.sample(sanc_virtue, 7)  &amp;#10;sanc_vice_amp = random.sample(sanc_vice, 7) &amp;#10;nonword_amp = random.sample(nonword, 72) &amp;#10;control_amp = control  &amp;#10;&amp;#10;# Concatenating all of these samples together for the final list.&amp;#10;&amp;#10;AMP_words = care_virtue_amp + care_vice_amp + fair_virtue_amp + fair_vice_amp + loyal_virtue_amp + loyal_vice_amp + auth_virtue_amp + auth_vice_amp + sanc_virtue_amp + sanc_vice_amp + control_amp&amp;#10;&amp;#10;# Now pulling the rows from the original CSV And putting them into a new CSV that will be original for each person.&amp;#10;&amp;#10;AMP_wordlist = words.loc[AMP_words].word.values &amp;#10;AMP_masklist = words.loc[nonword_amp].masks.values &amp;#10;AMP_nonwordlist = words.loc[nonword_amp].word.values &amp;#10;AMP_corr_ans = words.loc[AMP_words].correct_amp.values&amp;#10;&amp;#10;df1 = pd.DataFrame(     &amp;#10;    {'words': AMP_wordlist.tolist(),      &amp;#10;    'corr_ans': AMP_corr_ans.tolist()     &amp;#10;    })  &amp;#10;df2 = pd.DataFrame(      &amp;#10;    {'nonwords': AMP_nonwordlist.tolist(),      &amp;#10;    'masks': AMP_masklist.tolist(),     &amp;#10;    })   &amp;#10;&amp;#10;df1 = df1.sample(frac=1).reset_index(drop=True) &amp;#10;df2 = df2.sample(frac=1).reset_index(drop=True)  &amp;#10;df_full = pd.concat([df1,df2], axis = 1)&amp;#10;&amp;#10;df_full.to_csv(&quot;AMP_conditions.csv&quot;)&amp;#10;&amp;#10;# Getting the LDT words &amp;#10;&amp;#10;care_virtue_LDT = list(set(care_virtue).difference(care_virtue_amp))&amp;#10;care_vice_LDT = list(set(care_vice).difference(care_vice_amp)) &amp;#10;fair_virtue_LDT = list(set(fair_virtue).difference(fair_virtue_amp)) &amp;#10;fair_vice_LDT = list(set(fair_vice).difference(fair_vice_amp)) &amp;#10;loyal_virtue_LDT = list(set(loyal_virtue).difference(loyal_virtue_amp))  &amp;#10;loyal_vice_LDT = list(set(loyal_vice).difference(loyal_vice_amp)) &amp;#10;auth_virtue_LDT = list(set(auth_virtue).difference(auth_virtue_amp))  &amp;#10;auth_vice_LDT = list(set(auth_vice).difference(auth_vice_amp)) &amp;#10;sanc_virtue_LDT = list(set(sanc_virtue).difference(sanc_virtue_amp)) &amp;#10;sanc_vice_LDT = list(set(sanc_vice).difference(sanc_vice_amp)) &amp;#10;nonword_LDT = list(set(nonword).difference(nonword_amp)) &amp;#10;neutral_LDT = neutral&amp;#10;&amp;#10;# Concatenating together all of the LDT words and then shuffling them for good measure.&amp;#10;&amp;#10;LDT_words = care_virtue_LDT + care_vice_LDT + fair_virtue_LDT + fair_vice_LDT + loyal_virtue_LDT + loyal_vice_LDT + auth_virtue_LDT + auth_vice_LDT + sanc_virtue_LDT + sanc_vice_LDT + nonword_LDT + neutral_LDT&amp;#10;random.shuffle(LDT_words)&amp;#10;&amp;#10;# Generating a random selection of two words for the AMP practice.&amp;#10;&amp;#10;AMP_prac_selection = np.random.choice(10, 2)
AMP_prac_selection.tolist()&amp;#10;&amp;#10;# Generating a random selection of three words for the LDT practice.&amp;#10;&amp;#10;LDT_prac_selection = np.random.choice(10, 3)
LDT_prac_selection.tolist()" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="os.remove(&quot;AMP_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AMP_nonword_prac">
      <TextComponent name="AMP_nonwordstim_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_nonwordstim_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".75" valType="code"/>
        <Param name="text" updates="set every repeat" val="$nonwords" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_AMP_prac">
        <Param name="allowedKeys" updates="constant" val="'left','right',&quot;escape&quot;,&quot;n&quot;" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP_prac" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".75" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3.25" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_5">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_5" valType="code"/>
      </CodeComponent>
      <TextComponent name="AMP_maskstim_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_maskstim_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.75" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="3.25" valType="code"/>
        <Param name="text" updates="set every repeat" val="$masks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instr_AMP_2">
      <TextComponent name="instr_AMP9">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Great job!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP14">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP14" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Remember that LEFT is negative&amp;#10;and RIGHT is positive." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_5">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="10" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_AMP11">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="If you are ready to begin, please press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_AMP_ready">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP_ready" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_13">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False  " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_13" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_AMP_3">
      <TextComponent name="instr_AMP12">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP12" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Let's go!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_14">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_14" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_LDT">
      <TextComponent name="instr_LDT1">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the second task!&amp;#10;&amp;#10;In this task, you will see a selection of words and non-words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will see a word or a non-word quickly followed by a string of symbols&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="8" valType="code"/>
        <Param name="text" updates="constant" val="Upon seeing the symbols, you should decide as quickly as possible whether you saw a word or non-word" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT4">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="20" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If you think you saw a word, press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT5">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="26" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If you think you saw a non-word, press the left arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT6">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="32" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Please make sure your fingers are in the correct place" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/keyboard_diagram.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="38" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="keyboard_reminder_LDT">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_LDT.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="keyboard_reminder_LDT" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="42" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_LDT7">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="46" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Let's do a practice round" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT8">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="8" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="50" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="When you are ready to begin, press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_LDT_instr">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_LDT_instr" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="50" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_15">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_15" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="LDT_prac">
      <TextComponent name="LDT_word_prac">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_word_prac" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".4" valType="code"/>
        <Param name="text" updates="set every repeat" val="$word" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="LDT_mask_prac">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_mask_prac" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="text" updates="set every repeat" val="$masks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT_prac">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT_prac" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_6">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="os.remove(&quot;AMP_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_6" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="LDT_fix_prac">
      <ImageComponent name="LDT_fix_cross">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/crosshair.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="LDT_fix_cross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="[50,50]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$rand_duration" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_7">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="rand_duration = random.randint(1000, 3000)/1000" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_7" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="LDT_fix">
      <ImageComponent name="LDT_fix_cross_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/crosshair.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="LDT_fix_cross_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="[50,50]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$rand_duration" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_8">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="rand_duration = random.randint(1000, 3000)/1000" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_8" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_LDT_2">
      <TextComponent name="instr_LDT9">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Great job!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT10">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Remember that LEFT is non-word&amp;#10;and RIGHT is word." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_6">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_LDT.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="10" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_LDT11">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="If you are ready to begin, please press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT_ready">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT_ready" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_16">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_16" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_tweets">
      <TextComponent name="instr_LDT1_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT1_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the third task!&amp;#10;&amp;#10;In this task, you will see a selection of tweets" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT2_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT2_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will be asked to rate how the tweet made you feel." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT3_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT3_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the tweet made you feel positive, press the RIGHT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT4_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT4_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="18" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the tweet made you feel negative, press the LEFT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="keyboard_reminder_LDT_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="keyboard_reminder_LDT_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="24" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_LDT8_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="8" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT8_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="30" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="When you are ready to begin, press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_LDT_instr_2">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_LDT_instr_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="30" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_17">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_17" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="LDT_trial">
      <TextComponent name="LDT_word_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_word_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".4" valType="code"/>
        <Param name="text" updates="set every repeat" val="$word" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="LDT_mask_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_mask_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="text" updates="set every repeat" val="$masks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT_2">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_10">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="os.remove(&quot;AMP_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_10" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="tweets">
      <TextComponent name="tweet">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="10" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="tweet" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$tweets" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="9" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_9">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="os.remove(&quot;AMP_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_9" valType="code"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instr1"/>
    <Routine name="instr_AMP"/>
    <LoopInitiator loopType="TrialHandler" name="AMP_prac_loop">
      <Param name="Selected rows" updates="None" val="$AMP_prac_selection" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('corr_ans', 'left'), ('words', 'praised'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'mih')]), OrderedDict([('corr_ans', 'left'), ('words', 'clean'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'galamitous')]), OrderedDict([('corr_ans', 'right'), ('words', 'terrorist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'emports')]), OrderedDict([('corr_ans', 'right'), ('words', 'groups'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Phintoism')]), OrderedDict([('corr_ans', 'left'), ('words', 'growth'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'asn')]), OrderedDict([('corr_ans', 'right'), ('words', 'threatened'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'nuckheap')]), OrderedDict([('corr_ans', 'left'), ('words', 'hand'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'divility')]), OrderedDict([('corr_ans', 'right'), ('words', 'rebels'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'glacenta')]), OrderedDict([('corr_ans', 'left'), ('words', 'actively'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fonderland')]), OrderedDict([('corr_ans', 'left'), ('words', 'restore'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gaultless')]), OrderedDict([('corr_ans', 'right'), ('words', 'charges'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'yane')]), OrderedDict([('corr_ans', 'left'), ('words', 'fair'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'neutralust')]), OrderedDict([('corr_ans', 'left'), ('words', 'support'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ronviolence')]), OrderedDict([('corr_ans', 'left'), ('words', 'free'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'baklara')]), OrderedDict([('corr_ans', 'left'), ('words', 'trust'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fostet')]), OrderedDict([('corr_ans', 'right'), ('words', 'penalty'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sliptery')]), OrderedDict([('corr_ans', 'left'), ('words', 'celebrated'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ablow')]), OrderedDict([('corr_ans', 'left'), ('words', 'good'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'strofe')]), OrderedDict([('corr_ans', 'left'), ('words', 'ability'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'discovars')]), OrderedDict([('corr_ans', 'right'), ('words', 'ban'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'laming')]), OrderedDict([('corr_ans', 'left'), ('words', 'safety'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'letish')]), OrderedDict([('corr_ans', 'right'), ('words', 'harassment'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'rorroborated')]), OrderedDict([('corr_ans', 'left'), ('words', 'health'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'refuejing')]), OrderedDict([('corr_ans', 'left'), ('words', 'increase'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gusinesslike')]), OrderedDict([('corr_ans', 'left'), ('words', 'intelligence'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tislay')]), OrderedDict([('corr_ans', 'right'), ('words', 'scandal'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fontacts')]), OrderedDict([('corr_ans', 'right'), ('words', 'war'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'simplustic')]), OrderedDict([('corr_ans', 'right'), ('words', 'victim'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'slending')]), OrderedDict([('corr_ans', 'left'), ('words', 'dignity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'wonderfujnoss')]), OrderedDict([('corr_ans', 'right'), ('words', 'prison'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'photocalkodes')]), OrderedDict([('corr_ans', 'left'), ('words', 'party'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Boeinf')]), OrderedDict([('corr_ans', 'left'), ('words', 'win'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'imebreaker')]), OrderedDict([('corr_ans', 'left'), ('words', 'faith'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'thabbily')]), OrderedDict([('corr_ans', 'right'), ('words', 'forced'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gazily')]), OrderedDict([('corr_ans', 'left'), ('words', 'peace'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'cromiscuity')]), OrderedDict([('corr_ans', 'right'), ('words', 'rejected'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'honstables')]), OrderedDict([('corr_ans', 'left'), ('words', 'energy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'blunderints')]), OrderedDict([('corr_ans', 'right'), ('words', 'injured'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'seachwear')]), OrderedDict([('corr_ans', None), ('words', 'negative'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'aubos')]), OrderedDict([('corr_ans', 'right'), ('words', 'protesters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('corr_ans', 'right'), ('words', 'civilians'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fangsters')]), OrderedDict([('corr_ans', 'right'), ('words', 'troops'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'forepo')]), OrderedDict([('corr_ans', 'right'), ('words', 'refused'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'perified')]), OrderedDict([('corr_ans', 'left'), ('words', 'promises'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ammessment')]), OrderedDict([('corr_ans', 'right'), ('words', 'hate'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'proached')]), OrderedDict([('corr_ans', 'left'), ('words', 'agreement'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'mecan')]), OrderedDict([('corr_ans', 'left'), ('words', 'protect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'feleological')]), OrderedDict([('corr_ans', 'right'), ('words', 'army'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'vurtain')]), OrderedDict([('corr_ans', 'left'), ('words', 'progress'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'infet')]), OrderedDict([('corr_ans', 'right'), ('words', 'police'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gationwide')]), OrderedDict([('corr_ans', 'left'), ('words', 'ensure'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Oregoniuns')]), OrderedDict([('corr_ans', 'right'), ('words', 'torture'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'abointment')]), OrderedDict([('corr_ans', 'left'), ('words', 'respect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'smapper')]), OrderedDict([('corr_ans', 'right'), ('words', 'failure'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'thadowed')]), OrderedDict([('corr_ans', 'right'), ('words', 'lies'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framatic')]), OrderedDict([('corr_ans', 'right'), ('words', 'crime'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'clattening')]), OrderedDict([('corr_ans', 'right'), ('words', 'died'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'stindig')]), OrderedDict([('corr_ans', 'right'), ('words', 'riot'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'frojecting')]), OrderedDict([('corr_ans', 'left'), ('words', 'promote'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gondensed')]), OrderedDict([('corr_ans', 'right'), ('words', 'corruption'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'crilfully')]), OrderedDict([('corr_ans', 'right'), ('words', 'death'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lorthwhile')]), OrderedDict([('corr_ans', 'right'), ('words', 'racist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'bruthfulness')]), OrderedDict([('corr_ans', 'right'), ('words', 'critics'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ilportation')]), OrderedDict([('corr_ans', 'left'), ('words', 'hope'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'focomotive')]), OrderedDict([('corr_ans', 'right'), ('words', 'fear'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dumid')]), OrderedDict([('corr_ans', 'left'), ('words', 'great'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gournful')]), OrderedDict([('corr_ans', 'left'), ('words', 'useful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hefurbished')]), OrderedDict([('corr_ans', 'left'), ('words', 'embrace'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'prones')]), OrderedDict([('corr_ans', None), ('words', 'positive'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'festate')]), OrderedDict([('corr_ans', 'left'), ('words', 'friends'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reprisols')]), OrderedDict([('corr_ans', 'right'), ('words', 'conspiracy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gikely')]), OrderedDict([('corr_ans', 'right'), ('words', 'attacks'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'atson')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="AMP_conditions.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="AMP_prac_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="AMP_prac_word"/>
    <Routine name="AMP_nonword_prac"/>
    <LoopTerminator name="AMP_prac_loop"/>
    <Routine name="instr_AMP_2"/>
    <Routine name="instr_AMP_3"/>
    <LoopInitiator loopType="TrialHandler" name="AMP_trials">
      <Param name="Selected rows" updates="None" val="0:3" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('corr_ans', 'left'), ('words', 'growth'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'blunderints')]), OrderedDict([('corr_ans', 'left'), ('words', 'freedom'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'tove')]), OrderedDict([('corr_ans', 'left'), ('words', 'honored'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lorthwhile')]), OrderedDict([('corr_ans', 'left'), ('words', 'celebrated'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chared')]), OrderedDict([('corr_ans', 'right'), ('words', 'victim'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'prones')]), OrderedDict([('corr_ans', 'right'), ('words', 'injured'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hescribe')]), OrderedDict([('corr_ans', 'left'), ('words', 'clean'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'coom')]), OrderedDict([('corr_ans', 'right'), ('words', 'abuse'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'nomparisons')]), OrderedDict([('corr_ans', 'left'), ('words', 'friends'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framo')]), OrderedDict([('corr_ans', 'left'), ('words', 'opportunity'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'uller')]), OrderedDict([('corr_ans', 'left'), ('words', 'restore'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gationwide')]), OrderedDict([('corr_ans', 'left'), ('words', 'care'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gikely')]), OrderedDict([('corr_ans', 'right'), ('words', 'army'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'baladroit')]), OrderedDict([('corr_ans', None), ('words', 'negative'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sidearbs')]), OrderedDict([('corr_ans', 'right'), ('words', 'illegal'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gondensed')]), OrderedDict([('corr_ans', 'right'), ('words', 'rejected'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'asn')]), OrderedDict([('corr_ans', 'left'), ('words', 'promote'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'ning')]), OrderedDict([('corr_ans', 'right'), ('words', 'scandal'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'leact')]), OrderedDict([('corr_ans', 'right'), ('words', 'racist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'emports')]), OrderedDict([('corr_ans', 'right'), ('words', 'prison'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gandbrake')]), OrderedDict([('corr_ans', 'left'), ('words', 'trust'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fangsters')]), OrderedDict([('corr_ans', 'right'), ('words', 'rebels'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ebbitter')]), OrderedDict([('corr_ans', 'left'), ('words', 'praised'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chadows')]), OrderedDict([('corr_ans', 'left'), ('words', 'dignity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'mightingale')]), OrderedDict([('corr_ans', 'right'), ('words', 'sexual'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fostet')]), OrderedDict([('corr_ans', 'right'), ('words', 'failure'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framatic')]), OrderedDict([('corr_ans', 'left'), ('words', 'perfect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'frocessing')]), OrderedDict([('corr_ans', 'left'), ('words', 'protect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ronviolence')]), OrderedDict([('corr_ans', 'left'), ('words', 'actively'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'nackers')]), OrderedDict([('corr_ans', 'left'), ('words', 'useful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dramens')]), OrderedDict([('corr_ans', 'left'), ('words', 'promises'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', &quot;counpy's&quot;)]), OrderedDict([('corr_ans', 'right'), ('words', 'fighters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'taxpayung')]), OrderedDict([('corr_ans', 'right'), ('words', 'accused'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'bruthfulness')]), OrderedDict([('corr_ans', 'right'), ('words', 'protesters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'vicissifude')]), OrderedDict([('corr_ans', 'left'), ('words', 'agreement'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tomedians')]), OrderedDict([('corr_ans', 'left'), ('words', 'health'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'epigrach')]), OrderedDict([('corr_ans', 'right'), ('words', 'terrorists'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sickyay')]), OrderedDict([('corr_ans', 'right'), ('words', 'torture'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lempestuous')]), OrderedDict([('corr_ans', 'right'), ('words', 'crime'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lachelor')]), OrderedDict([('corr_ans', 'left'), ('words', 'safety'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fegard')]), OrderedDict([('corr_ans', 'right'), ('words', 'betrayal'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pescinded')]), OrderedDict([('corr_ans', 'left'), ('words', 'values'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'egpeditious')]), OrderedDict([('corr_ans', 'right'), ('words', 'refused'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dumid')]), OrderedDict([('corr_ans', 'right'), ('words', 'arrests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'laming')]), OrderedDict([('corr_ans', 'right'), ('words', 'corruption'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'divility')]), OrderedDict([('corr_ans', 'left'), ('words', 'credit'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'papert')]), OrderedDict([('corr_ans', 'right'), ('words', 'died'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'simplustic')]), OrderedDict([('corr_ans', 'left'), ('words', 'compassion'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'oam')]), OrderedDict([('corr_ans', 'right'), ('words', 'riot'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'wump')]), OrderedDict([('corr_ans', 'right'), ('words', 'men'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'smapper')]), OrderedDict([('corr_ans', 'left'), ('words', 'loyalty'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hefurbished')]), OrderedDict([('corr_ans', 'right'), ('words', 'killed'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'yane')]), OrderedDict([('corr_ans', 'left'), ('words', 'support'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'crilfully')]), OrderedDict([('corr_ans', 'left'), ('words', 'help'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gedious')]), OrderedDict([('corr_ans', 'left'), ('words', 'free'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'quarterbocks')]), OrderedDict([('corr_ans', None), ('words', 'positive'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'synchronazers')]), OrderedDict([('corr_ans', 'right'), ('words', 'civilians'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Boeinf')]), OrderedDict([('corr_ans', 'right'), ('words', 'slavery'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'greaks')]), OrderedDict([('corr_ans', 'right'), ('words', 'suicide'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ablow')]), OrderedDict([('corr_ans', 'right'), ('words', 'voter'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'brotesque')]), OrderedDict([('corr_ans', 'right'), ('words', 'war'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'aubos')]), OrderedDict([('corr_ans', 'left'), ('words', 'faith'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'esquisiteness')]), OrderedDict([('corr_ans', 'right'), ('words', 'forced'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'honstables')]), OrderedDict([('corr_ans', 'right'), ('words', 'black'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reprisols')]), OrderedDict([('corr_ans', 'left'), ('words', 'encourage'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'idexpressible')]), OrderedDict([('corr_ans', 'right'), ('words', 'critics'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pafer')]), OrderedDict([('corr_ans', 'left'), ('words', 'strong'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'feleological')]), OrderedDict([('corr_ans', 'left'), ('words', 'promised'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'cromiscuity')]), OrderedDict([('corr_ans', 'left'), ('words', 'love'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'discovars')]), OrderedDict([('corr_ans', 'right'), ('words', 'drug'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reviked')]), OrderedDict([('corr_ans', 'left'), ('words', 'integrity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ejanulated')]), OrderedDict([('corr_ans', 'left'), ('words', 'powerful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sgrawl')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="AMP_conditions.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="AMP_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="AMP_word"/>
    <Routine name="AMP_nonword"/>
    <LoopTerminator name="AMP_trials"/>
    <Routine name="instr_LDT"/>
    <LoopInitiator loopType="TrialHandler" name="LDT_prac_loop">
      <Param name="Selected rows" updates="None" val="$LDT_prac_selection" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('word', 'care'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'help'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'health'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'good'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'peace'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'safe'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'compassion'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'safety'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'improve'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'growth'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'increase'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'restore'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'killed'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'death'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'violence'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'attacks'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'civilians'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'suicide'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'died'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'torture'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'victims'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'victim'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'injured'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'shot'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'free'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ensure'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'protect'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'benefit'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'integrity'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'interests'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'credit'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'agreement'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'opportunity'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fair'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'win'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'promises'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fraud'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'illegal'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'crime'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hate'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'prison'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'accused'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lies'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'charges'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'threatened'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'voter'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'forced'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'terrorists'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'support'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'love'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'intelligence'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'strong'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'friends'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'party'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'great'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'loyalty'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hope'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'promised'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'praised'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sharing'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'terrorist'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ban'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'groups'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'failure'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'black'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'troops'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'slavery'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'blamed'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'men'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'army'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'betrayal'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'critics'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'trust'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'useful'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'actively'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'embrace'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'praise'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'powerful'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'honored'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'celebrated'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ability'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'progress'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'encourage'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'peaceful'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'police'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'officers'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gun'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'penalty'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'rebels'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'rejected'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'protesters'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fighters'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'prosecution'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'riot'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'refused'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'arrests'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'values'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'freedom'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'respect'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'commitment'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'strength'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'promote'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'clean'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'faith'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hand'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'dignity'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'perfect'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'energy'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'abuse'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'racist'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sexual'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'war'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'serial'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'drug'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fear'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'scandal'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'corruption'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'conspiracy'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'harassment'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'violations'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'latterly'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hereby'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'forty'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'although'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'whereafter'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'also'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'wherever'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'either'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'about'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'everything'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'three'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fifty'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hence'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'amount'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'latter'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'amoungst'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'whither'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'each'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'thru'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'could'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'myself'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fifteen'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'eight'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'less'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'elsewhere'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'couldnt'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'besides'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'even'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'both'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'towards'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'give'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'done'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'noone'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'therefore'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'with'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'else'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'toward'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'anything'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'somehow'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'least'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'were'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'there'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'been'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'front'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mostly'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'seem'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'itself'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'further'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'anyhow'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'become'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'brudent'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'idexpressible'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'epigrach'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'honstables'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'framatic'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chonograph'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'cromiscuity'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'perified'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'discovars'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'alar'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'noped'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'festate'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'supervuned'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fontacts'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'clamorek'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fostet'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'aubos'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sliptery'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lursuer'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gedious'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gikely'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gationwide'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sgrawl'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'erks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nomparisons'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nackers'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'reviked'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'slending'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'neneficence'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mecan'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ugeasily'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gusinesslike'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mih'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'rivernoat'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'galamitous'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'vurtain'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'letish'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sidearbs'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'refuejing'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Phintoism'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'erdest'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'feleological'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ning'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nuckheap'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'crinking'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ilportation'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gazily'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'thadowed'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'wonderfujnoss'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'allears'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'taxpayung'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'squets'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'unscothed'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sickyay'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tislay'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'asn'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'grovelire'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'forepo'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pistraught'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'reprisols'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'reelectiob'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lachelor'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gandbrake'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'presentkess'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'glacenta'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'thabbily'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pullness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'scock'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'atson'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gowlands'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Daptist'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'imebreaker'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Loorish'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'egpeditious'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fonderland'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tracious'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ablow'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'seachwear'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pafer'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'divility'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'abointment'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'suggists'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'photocalkodes'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gaultless'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'metibolic'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lorthwhile'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'stindig'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'vicissifude'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'uller'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'crilfully'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fegard'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'emports'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'infet'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'emassion'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'yane'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tomedians'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'disregord'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'neutralust'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tenuflect'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lenon'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nonobservalt'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hasks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gondensed'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tabin'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'strofe'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'troubla'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'rorroborated'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'oam'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'brotesque'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'unreflectuve'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Oregoniuns'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'smapper'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'baklara'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fangsters'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'coom'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'antral'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'godlaness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ammessment'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'quarterbocks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chared'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'synchronazers'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'scalbel'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'neputized'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'laming'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hescribe'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gournful'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chreams'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'dramens'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ejanulated'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pulge'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'prones'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'framo'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'clattening'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sowntrodden'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', &quot;counpy's&quot;), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ronviolence'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pharing'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lempestuous'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'precificity'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'papert'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fornicalion'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Lacedonia'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'touls'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hatigue'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'greaks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'frojecting'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'baladroit'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pescinded'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ittutable'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hefurbished'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'drumbled'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'blunderints'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'esquisiteness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'shoirmaster'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'juck'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'bruthfulness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'iptervention'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tove'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chadows'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'simplustic'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'proached'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'dumid'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mightingale'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'leact'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'frocessing'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'wump'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ebbitter'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Boeinf'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'focomotive'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'elduringly'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'positive'), ('category', 'control'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'negative'), ('category', 'control'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="words4exp.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="fullRandom" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="LDT_prac_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="LDT_fix_prac"/>
    <Routine name="LDT_prac"/>
    <LoopTerminator name="LDT_prac_loop"/>
    <Routine name="instr_LDT_2"/>
    <LoopInitiator loopType="TrialHandler" name="LDT_loop">
      <Param name="Selected rows" updates="None" val="5" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('word', 'care'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'help'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'health'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'good'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'peace'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'safe'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'compassion'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'safety'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'improve'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'growth'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'increase'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'restore'), ('category', 'care.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'killed'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'death'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'violence'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'attacks'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'civilians'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'suicide'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'died'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'torture'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'victims'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'victim'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'injured'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'shot'), ('category', 'care.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'free'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ensure'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'protect'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'benefit'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'integrity'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'interests'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'credit'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'agreement'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'opportunity'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fair'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'win'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'promises'), ('category', 'fairness.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fraud'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'illegal'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'crime'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hate'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'prison'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'accused'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lies'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'charges'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'threatened'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'voter'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'forced'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'terrorists'), ('category', 'fairness.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'support'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'love'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'intelligence'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'strong'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'friends'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'party'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'great'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'loyalty'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hope'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'promised'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'praised'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sharing'), ('category', 'loyalty.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'terrorist'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ban'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'groups'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'failure'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'black'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'troops'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'slavery'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'blamed'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'men'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'army'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'betrayal'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'critics'), ('category', 'loyalty.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'trust'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'useful'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'actively'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'embrace'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'praise'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'powerful'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'honored'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'celebrated'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ability'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'progress'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'encourage'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'peaceful'), ('category', 'authority.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'police'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'officers'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gun'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'penalty'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'rebels'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'rejected'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'protesters'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fighters'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'prosecution'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'riot'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'refused'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'arrests'), ('category', 'authority.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'values'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'freedom'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'respect'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'commitment'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'strength'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'promote'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'clean'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'faith'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hand'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'dignity'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'perfect'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'energy'), ('category', 'sanctity.virtue'), ('correct_amp', 'left'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'abuse'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'racist'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sexual'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'war'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'serial'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'drug'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fear'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'scandal'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'corruption'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'conspiracy'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'harassment'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'violations'), ('category', 'sanctity.vice'), ('correct_amp', 'right'), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'latterly'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hereby'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'forty'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'although'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'whereafter'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'also'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'wherever'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'either'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'about'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'everything'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'three'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fifty'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hence'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'amount'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'latter'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'amoungst'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'whither'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'each'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'thru'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'could'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'myself'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fifteen'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'eight'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'less'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'elsewhere'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'couldnt'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'besides'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'even'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'both'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'towards'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'give'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'done'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'noone'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'therefore'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'with'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'else'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'toward'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'anything'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'somehow'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'least'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'were'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'there'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'been'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'front'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mostly'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'seem'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'itself'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'further'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'anyhow'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'become'), ('category', 'neutral'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'brudent'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'idexpressible'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'epigrach'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'honstables'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'framatic'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chonograph'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'cromiscuity'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'perified'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'discovars'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'alar'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'noped'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'festate'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'supervuned'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fontacts'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'clamorek'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fostet'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'aubos'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sliptery'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lursuer'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gedious'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gikely'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gationwide'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sgrawl'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'erks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nomparisons'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nackers'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'reviked'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'slending'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'neneficence'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mecan'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ugeasily'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gusinesslike'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mih'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'rivernoat'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'galamitous'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'vurtain'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'letish'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sidearbs'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'refuejing'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Phintoism'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'erdest'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'feleological'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ning'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nuckheap'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'crinking'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ilportation'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gazily'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'thadowed'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'wonderfujnoss'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'allears'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'taxpayung'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'squets'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'unscothed'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sickyay'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tislay'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'asn'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'grovelire'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'forepo'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pistraught'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'reprisols'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'reelectiob'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lachelor'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gandbrake'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'presentkess'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'glacenta'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'thabbily'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pullness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'scock'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'atson'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gowlands'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Daptist'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'imebreaker'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Loorish'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'egpeditious'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fonderland'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tracious'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ablow'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'seachwear'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pafer'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'divility'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'abointment'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'suggists'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'photocalkodes'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gaultless'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'metibolic'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lorthwhile'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'stindig'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'vicissifude'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'uller'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'crilfully'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fegard'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'emports'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'infet'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'emassion'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'yane'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tomedians'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'disregord'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'neutralust'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tenuflect'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lenon'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'nonobservalt'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hasks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gondensed'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tabin'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'strofe'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'troubla'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'rorroborated'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'oam'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;')]), OrderedDict([('word', 'brotesque'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'unreflectuve'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Oregoniuns'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'smapper'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'baklara'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fangsters'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'coom'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'antral'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'godlaness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ammessment'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'quarterbocks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chared'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'synchronazers'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'scalbel'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'neputized'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'laming'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hescribe'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'gournful'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chreams'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'dramens'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ejanulated'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pulge'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'prones'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'framo'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'clattening'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'sowntrodden'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', &quot;counpy's&quot;), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ronviolence'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pharing'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'lempestuous'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'precificity'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'papert'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'fornicalion'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Lacedonia'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'touls'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hatigue'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'greaks'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'frojecting'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'baladroit'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'pescinded'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ittutable'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'hefurbished'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'drumbled'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'blunderints'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'esquisiteness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'shoirmaster'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'juck'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'bruthfulness'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'iptervention'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'tove'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'chadows'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'simplustic'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'proached'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'dumid'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'mightingale'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'leact'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'frocessing'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'wump'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'ebbitter'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'Boeinf'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'focomotive'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'elduringly'), ('category', 'nonword'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'positive'), ('category', 'control'), ('correct_amp', None), ('correct_ldt', 'left'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('word', 'negative'), ('category', 'control'), ('correct_amp', None), ('correct_ldt', 'right'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="words4exp.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="LDT_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="LDT_fix"/>
    <Routine name="LDT_trial"/>
    <LoopTerminator name="LDT_loop"/>
    <Routine name="instr_tweets"/>
    <LoopInitiator loopType="TrialHandler" name="tweet_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('tweet', '@yokoono Over 1,100,000 people killed by guns in the USA since @JohnLennon was shot and killed on Dec 8 1980 #StopGunViolence'), ('category', 'care.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweet', &quot;@toad comments on Tina Marshall's anniversary and asks for public's help as he looks at new gun safety actions&quot;), ('category', 'care.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweet', '@qarty But Mr. Sanders, in a free country, our guns should be free to have a terrorist. #gunsanity #gunsense'), ('category', 'fairness.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweet', '@jiordan Most gun control laws are ineffective at stopping crime'), ('category', 'fairness.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweet', '@bob35 Retweet if you support the Second Amendment!'), ('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweet', &quot;@laurien The Second Amendment must go: We ban lawn darts. It's time to ban guns&quot;), ('category', 'loyalty.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweet', '@york We have an obligation to end #gunviolence'), ('category', 'authority.virtue'), ('corr_ans', 'left'), ('topic', 'gun\xa0')]), OrderedDict([('tweet', &quot;@sabrina49 Gun bans don't disarm criminals, gun bans attract them&quot;), ('category', 'authority.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweet', '@helena_roy Faith and advocacy groups hosting vigils to end gun violence this week'), ('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweet', &quot;@adoesch Don't condemn Islam for these two terrorists, but do condemn all law-abiding gun owners because of the guns they used&quot;), ('category', 'sanctity.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweet', '@tlocke: Millennials care about climate change, conservatives should too'), ('category', 'care.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweet', '@JoYce 24hrs after #Paris attacks @thomas_dune says climate change is biggest threat to national security'), ('category', 'care.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweet', '@AGSchneiderman Companies must be honest about climate change risks.\xa0'), ('category', 'fairness.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweet', '@NRDC: Exxon Under Criminal Investigation over Lying About Climate Change'), ('category', 'fairness.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweet', '@Jkmolly Retweet if you support American leadership on climate change'), ('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweet', '@PoliticsFairfax Most Coalition voters reject humans to blame for climate change'), ('category', 'loyalty.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweet', '@c40cities Cites are committing to take local action to strengthen national commitments to fighting #climatechange'), ('category', 'authority.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweet', '@MEAIndia The two main challenges facing the world today are terrorism and global warming'), ('category', 'authority.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweet', &quot;@FEdwards We should respect worker's rights, respect the right to organize, and fight climate change&quot;), ('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweet', '@AmblRay As climate change reduces resources, women travel farther to collect water and firewood, increasing risk of sexual violence.'), ('category', 'sanctity.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweet', '@HPPics Newly married Richard Cormac kiss after the first ever same sex marriage in Ireland'), ('category', 'care.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweet', '@WGNNews Utah same-sex couple fighting judge who removed foster child to place with heterosexual couple'), ('category', 'care.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweet', '@MelisaHary How can we truly achieve equality when religions are exempt from adhering to legislation around same-sex adoption?'), ('category', 'fairness.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweet', &quot;@PinkNews Northern Irish DUP accused of 'abusing' peace process to block same-sex marriage&quot;), ('category', 'fairness.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweet', '@RKaB Thank you @repAdk for your support of the #EqualityAct! #LoveWins'), ('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweet', '@TheLastWord The Mormon Church places a ban on church activities for children of same-sex couples'), ('category', 'loyalty.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweet', '@BelTel Same-sex marriages signed into law in Republic of Ireland'), ('category', 'authority.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweet', &quot;@PinkNews Northern Irish DUP faces protests after 'abusing' peace powers to veto same-sex marriage&quot;), ('category', 'authority.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweet', &quot;@ginatrapani Kids raised by same-sex parents often happier &amp; healthier b/c parents don't fall into default gender roles.&quot;), ('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweet', '@Aisas_Raan According to the 2015 @ILGAWORLD State Sponsored Homophobia report, 75 countries criminalise same-sex sexual acts.'), ('category', 'sanctity.vice'), ('corr_ans', 'right'), ('topic', 'marriage')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="tweets.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="tweet_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="tweets"/>
    <LoopTerminator name="tweet_loop"/>
  </Flow>
</PsychoPy2experiment>
