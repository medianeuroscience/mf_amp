<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="3.0.3">
  <Settings>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1680, 1050]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0.765,0.765,0.765]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="mf_amp_cond1" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="instr_AMP">
      <TextComponent name="instr_AMP1">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the first task! In this task, you will see a selection of words." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="After seeing each word, you will see a nonsense word." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="After this, you will see a string of &quot;&amp;&quot; symbols" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP4">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="18" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="10" valType="code"/>
        <Param name="text" updates="constant" val="Upon seeing the &quot;&amp;&quot; symbols, you will rate whether the nonsense word you just saw made you feel pleasant or unpleasant" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP5">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="28" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the nonsense word made you feel pleasant, press the RIGHT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP6">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="34" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the nonsense made you feel unpleasant, press the LEFT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_4">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="40" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_AMP7">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="46" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Remember you are rating the nonsense word, NOT the word that came before it." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP8">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="52" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Let's do a practice round." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP13">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP13" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="58" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="When you are ready to begin press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_AMP_ready1">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP_ready1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="58" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_12">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_12" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr1">
      <TextComponent name="instr_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val=".05" valType="code"/>
        <Param name="name" updates="None" val="instr_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="The goal of this experiment is to better understand how people react to language" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will be asked to complete three different tasks, followed by a short survey." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_4">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Before we begin, please make sure your fingers are on the correct keys." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_5">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="18" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Your right index finger should be on the left arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_6">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="24" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Your right ring finger should be on the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/keyboard_diagram.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="28" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_7">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="32" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="If you are ready to begin please press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_AMP_instr1">
        <Param name="allowedKeys" updates="constant" val="'right','esc'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_AMP_instr1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="38" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_11">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:         continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_11" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_LDT_2">
      <TextComponent name="instr_LDT9">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Great job!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT10">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT10" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Remember that LEFT is nonsense word and RIGHT is real word." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_6">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_LDT.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="10" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_LDT11">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="If you are ready to begin, please press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT_ready">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT_ready" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_16">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_16" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AMP_prac_word">
      <TextComponent name="AMP_wordstim_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_wordstim_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".1" valType="code"/>
        <Param name="text" updates="set every repeat" val="$words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="gap">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="gap" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".125" valType="code"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_4">
        <Param name="Begin Experiment" updates="constant" val="import random &amp;#10;import pandas as pd&amp;#10;import numpy as np&amp;#10;&amp;#10;# reading in the CSV so that I can generate the conditions file for the AMP&amp;#10;words = pd.read_csv(&quot;condition_files/words4exp.csv&quot;)&amp;#10;&amp;#10;# Here are the row indices for all of the words in the full CSV.&amp;#10;&amp;#10;unique_cats = {k:None for k in words.category.unique()} &amp;#10;for k,v in unique_cats.items():&amp;#10;    unique_cats[k] = list(words[words.category == k].index.values)&amp;#10;&amp;#10;# Taking a sample from each category for the AMP and plugging the rest into the LDT&amp;#10;&amp;#10;full_amp_words = {k:None for k in unique_cats.keys() if k != &quot;neutral&quot;} &amp;#10;full_ldt_words = {k:None for k in unique_cats.keys()} &amp;#10;&amp;#10;for k,v in unique_cats.items():&amp;#10;    if &quot;.&quot; in str(k):&amp;#10;        full_amp_words[k] = random.sample(unique_cats[k],7)&amp;#10;        full_ldt_words[k] = [x for x in unique_cats[k] if x not in full_amp_words[k]]&amp;#10;    if k == &quot;nonword&quot;:&amp;#10;        full_amp_words[k] = random.sample(unique_cats[k],92)&amp;#10;        full_ldt_words[k] = [x for x in unique_cats[k] if x not in full_amp_words[k]]&amp;#10;    if k ==&quot;control&quot;:&amp;#10;        full_amp_words[k] = unique_cats[k]&amp;#10;    if k == &quot;neutral&quot;:&amp;#10;        full_ldt_words[k] = unique_cats[k]&amp;#10;&amp;#10;# Generating the final list of AMP words&amp;#10;&amp;#10;amp_moral_words = [] &amp;#10;amp_nonwords = [] &amp;#10;for k,v in full_amp_words.items():&amp;#10;    if k != &quot;nonword&quot;:&amp;#10;        for i in v:&amp;#10;            amp_moral_words.append(i)&amp;#10;    if k == &quot;nonword&quot;:&amp;#10;        for i in v:&amp;#10;            amp_nonwords.append(i)&amp;#10;&amp;#10;# Taking a random sample of 10 of the nonwords to use as primes, and then adding them to the primes list amp_nonword_primes = random.sample(amp_nonwords,10) amp_primes_list = amp_moral_words + amp_nonword_primes  for x in amp_nonword_primes:   amp_nonwords.remove(x)&amp;#10;&amp;#10;amp_nonword_select = random.sample(amp_nonwords,10)&amp;#10;amp_full_list = amp_moral_words + amp_nonword_select&amp;#10;&amp;#10;for x in amp_nonword_select:&amp;#10;    amp_nonwords.remove(x)&amp;#10;&amp;#10;# Pulling the words, correct answers, and categories for all of the indices for our moral words plus our ten nonword controls &amp;#10;AMP_wordlist = words.loc[amp_full_list].words.values &amp;#10;AMP_corr_ans = words.loc[amp_full_list].correct_amp.values &amp;#10;AMP_category = words.loc[amp_full_list].category.values  &amp;#10;&amp;#10;#pulling the nonwords and masks for our targets that weren't selected to be included in the prime &amp;#10;AMP_nonwordlist = words.loc[amp_nonwords].words.values &amp;#10;AMP_masklist = words.loc[amp_nonwords].masks.values&amp;#10;&amp;#10;# df1 is the words that will be used as primes and their associated categories and correct answers&amp;#10;df1 = pd.DataFrame(&amp;#10;    {'words': AMP_wordlist.tolist(),&amp;#10;    'corr_ans': AMP_corr_ans.tolist(),&amp;#10;    'category': AMP_category.tolist()&amp;#10;    })&amp;#10;&amp;#10;# df2 is the nonwords that will be used as targets and their associated masks&amp;#10;df2 = pd.DataFrame(      &amp;#10;    {'nonwords': AMP_nonwordlist.tolist(),      &amp;#10;    'mask': AMP_masklist.tolist()&amp;#10;    })  &amp;#10;&amp;#10;# Shuffling the words once and then generating four&amp;#10;&amp;#10;primes_rep1 = df1.sample(frac=1).reset_index(drop=True) &amp;#10;targets_rep1 = df2.sample(frac=1).reset_index(drop=True)  &amp;#10;&amp;#10;primes_rep2 = df1.sample(frac=1).reset_index(drop=True) &amp;#10;targets_rep2 = df2.sample(frac=1).reset_index(drop=True)  &amp;#10;&amp;#10;primes_rep3 = df1.sample(frac=1).reset_index(drop=True) &amp;#10;targets_rep3 = df2.sample(frac=1).reset_index(drop=True)  &amp;#10;&amp;#10;primes_rep4 = df1.sample(frac=1).reset_index(drop=True) &amp;#10;targets_rep4 = df2.sample(frac=1).reset_index(drop=True)  &amp;#10;&amp;#10;# Concatenating all of the primes and targets horizontally  &amp;#10;&amp;#10;rep1 = pd.concat([primes_rep1,targets_rep1], axis = 1) &amp;#10;rep2 = pd.concat([primes_rep2,targets_rep2], axis = 1) &amp;#10;rep3 = pd.concat([primes_rep3,targets_rep3], axis = 1) &amp;#10;rep4 = pd.concat([primes_rep4,targets_rep4], axis = 1) &amp;#10;&amp;#10;# Concatenating all of the reps horizontally  &amp;#10;&amp;#10;df_full = pd.concat([rep1,rep2,rep3,rep4], axis = 0)&amp;#10;&amp;#10;df_full.reset_index(inplace=True, drop=True) &amp;#10;&amp;#10;df_full.to_csv(&quot;condition_files/AMP_conditions.csv&quot;)&amp;#10;&amp;#10;# Getting the LDT words &amp;#10;&amp;#10;ldt_wordlist = [] &amp;#10;&amp;#10;for k,v in full_ldt_words.items():&amp;#10;    if k != &quot;control&quot;:&amp;#10;        for i in v:&amp;#10;            ldt_wordlist.append(i)&amp;#10;&amp;#10;# Pulling the words, correct answers, and categories for all of the indices for our words &amp;#10;LDT_words = words.loc[ldt_wordlist].words.values &amp;#10;LDT_corr = words.loc[ldt_wordlist].correct_ldt.values &amp;#10;LDT_category = words.loc[ldt_wordlist].category.values &amp;#10;LDT_masklist = words.loc[ldt_wordlist].masks.values &amp;#10;&amp;#10;# Creating a dataframe and writing to CSV&amp;#10;df_ldt = pd.DataFrame(&amp;#10;    {'words': LDT_words.tolist(),&amp;#10;    'corr_ans': LDT_corr.tolist(),&amp;#10;    'category': LDT_category.tolist(),&amp;#10;    'mask': LDT_masklist.tolist()&amp;#10;    })&amp;#10;&amp;#10;df_ldt_shuff = df_ldt.sample(frac=1).reset_index(drop=True) &amp;#10;&amp;#10;df_ldt_shuff.to_csv(&quot;condition_files/LDT_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="os.remove(&quot;AMP_conditions.csv&quot;)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
      <TextComponent name="AMP_nonwordstim_3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_nonwordstim_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".225" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".300" valType="code"/>
        <Param name="text" updates="set every repeat" val="$nonwords" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="trial_2">
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="set every repeat" val="$category" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_tweets">
      <TextComponent name="instr_LDT1_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT1_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the third task! In this task, you will see a selection of tweets" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT2_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT2_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will be asked to rate how the tweet made you feel." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT3_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT3_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the tweet made you feel pleasant, press the RIGHT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT4_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT4_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="18" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If the tweet made you feel unpleasant, press the LEFT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="keyboard_reminder_LDT_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="keyboard_reminder_LDT_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="24" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_LDT8_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="8" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT8_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="30" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="When you are ready to begin, press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_LDT_instr_2">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_LDT_instr_2" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="30" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_17">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_17" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_LDT">
      <TextComponent name="instr_LDT1">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the second task! In this task, you will see a selection of real words and nonsense words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="6" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="You will see a real word or a nonsense word quickly followed by a string of &quot;&amp;&quot; symbols&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT3">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="8" valType="code"/>
        <Param name="text" updates="constant" val="Upon seeing the &quot;&amp;&quot; symbols, you should decide as quickly as possible whether you saw a real word or nonsense word" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT4">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="20" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If you think you saw a real word, press the RIGHT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT5">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="26" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="If you think you saw a nonsense word, press the LEFT arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT6">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="32" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Please make sure your fingers are in the correct place" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/keyboard_diagram.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="38" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="keyboard_reminder_LDT">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_LDT.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="keyboard_reminder_LDT" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="42" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_LDT7">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT7" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="46" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="The words may be difficult to see, but please do the best you can" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LT8">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LT8" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="52" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Let's do a practice round" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_LDT9_">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="8" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_LDT9_" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="56" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="When you are ready to begin, press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_LDT_instr">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="8" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_LDT_instr" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="56" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_15">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_15" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="LDT_fix_prac">
      <ImageComponent name="LDT_fix_cross">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/crosshair.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="LDT_fix_cross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="[50,50]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$rand_duration" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_7">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="rand_duration = random.randint(100, 300)/1000" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_7" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr_AMP_3">
      <TextComponent name="instr_AMP12">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP12" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Let's go!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_14">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_14" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="LDT_prac">
      <TextComponent name="LDT_word_prac">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_word_prac" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".06" valType="code"/>
        <Param name="text" updates="set every repeat" val="$words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="LDT_mask_prac">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_mask_prac" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".06" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="text" updates="set every repeat" val="$mask" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT_prac">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT_prac" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".06" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_6">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('task', &quot;LDT_prac&quot;)&amp;#10;thisExp.addData('keypress', resp_LDT_prac.keys)&amp;#10;thisExp.addData('RT', resp_LDT_prac.rt)&amp;#10;thisExp.addData('corr', resp_LDT_prac.corr)" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_6" valType="code"/>
      </CodeComponent>
      <ImageComponent name="key_reminder_3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_LDT.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="key_reminder_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -6)" valType="code"/>
        <Param name="size" updates="constant" val="(20, 10)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.06" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="AMP_nonword">
      <KeyboardComponent name="resp_AMP">
        <Param name="allowedKeys" updates="constant" val="'left','right',&quot;escape&quot;,&quot;n&quot;" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="5" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('task', &quot;AMP&quot;)&amp;#10;thisExp.addData('keypress', resp_AMP.keys)&amp;#10;thisExp.addData('RT', resp_AMP.rt)&amp;#10;thisExp.addData('corr', resp_AMP.corr)" valType="extendedCode"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="AMP_maskstim">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="5" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_maskstim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$mask" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="key_reminder_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="5" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="key_reminder_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -6)" valType="code"/>
        <Param name="size" updates="constant" val="(20, 10)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="tweets">
      <TextComponent name="tweet">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="10" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="tweet" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$tweets" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_tweets">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_tweets" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="9" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_9">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('task', &quot;tweets&quot;)&amp;#10;thisExp.addData('keypress', resp_tweets.keys)&amp;#10;thisExp.addData('RT', resp_tweets.rt)" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_9" valType="code"/>
      </CodeComponent>
      <ImageComponent name="tweet_layout_reminder">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_amp.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="tweet_layout_reminder" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -8)" valType="code"/>
        <Param name="size" updates="constant" val="(20, 10)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="10" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="break_3">
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="text" updates="constant" val="Moving on..." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="AMP_nonword_prac">
      <KeyboardComponent name="resp_AMP_prac">
        <Param name="allowedKeys" updates="constant" val="'left','right',&quot;escape&quot;,&quot;n&quot;" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="5" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP_prac" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_5">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('task', &quot;AMP_prac&quot;)&amp;#10;thisExp.addData('keypress', resp_AMP_prac.keys)&amp;#10;thisExp.addData('RT', resp_AMP_prac.rt)" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_5" valType="code"/>
      </CodeComponent>
      <TextComponent name="AMP_maskstim_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="5" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_maskstim_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$mask" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="key_reminder">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="5" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="key_reminder" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -6)" valType="code"/>
        <Param name="size" updates="constant" val="(20, 10)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="LDT_trial">
      <TextComponent name="LDT_word_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_word_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".06" valType="code"/>
        <Param name="text" updates="set every repeat" val="$words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="LDT_mask_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="LDT_mask_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".06" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$mask" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_LDT">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_ans" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_LDT" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".06" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_10">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="thisExp.addData('task', &quot;LDT&quot;)&amp;#10;thisExp.addData('keypress', resp_LDT.keys)&amp;#10;thisExp.addData('RT', resp_LDT.rt)&amp;#10;thisExp.addData('corr', resp_LDT.corr)" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_10" valType="code"/>
      </CodeComponent>
      <ImageComponent name="key_reminder_4">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_LDT.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="key_reminder_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -6)" valType="code"/>
        <Param name="size" updates="constant" val="(20, 10)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.06" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
    </Routine>
    <Routine name="AMP_word">
      <TextComponent name="AMP_wordstim">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_wordstim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".1" valType="code"/>
        <Param name="text" updates="set every repeat" val="$words" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="gap_1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="gap_1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".125" valType="code"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_3">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
      <TextComponent name="AMP_nonwordstim_2">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_nonwordstim_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.225" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val=".3" valType="code"/>
        <Param name="text" updates="set every repeat" val="$nonwords" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instr_AMP_2">
      <TextComponent name="instr_AMP9">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP9" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="text" updates="constant" val="Great job!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instr_AMP14">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP14" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="4" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="text" updates="constant" val="Remember that LEFT is unpleasant and RIGHT is pleasant." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="image_5">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/layout_reminder_AMP.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="(0.9, 0.5)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="10" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="instr_AMP11">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instr_AMP11" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="If you are ready to begin, please press the right arrow key" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp_AMP_ready">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="6" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp_AMP_ready" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="16" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_13">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;if 'j' in keys:&amp;#10;        continueRoutine = False  " valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_13" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="hold">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val=".05" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Welcome to the Language and Emotion study! Please wait until a researcher says you may begin." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="begin_key">
        <Param name="allowedKeys" updates="constant" val="'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="begin_key" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="fix">
      <ImageComponent name="LDT_fix_cross_2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="images/crosshair.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="LDT_fix_cross_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="size" updates="constant" val="[50,50]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$rand_duration" valType="code"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </ImageComponent>
      <CodeComponent name="code_8">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="rand_duration = random.randint(100, 300)/1000" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_8" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AMP_feedback">
      <RatingScaleComponent name="AMP_nonword_rating">
        <Param name="categoryChoices" updates="constant" val="" valType="str"/>
        <Param name="customize_everything" updates="constant" val="scale = &quot;To what extent did you base your ratings on the nonsense words you saw?&quot;,&amp;#10;choices=None, &amp;#10;low=1, &amp;#10;high=7, &amp;#10;pos=[0,0],&amp;#10;precision=1, &amp;#10;labels=[&quot;Not at all&quot;,&quot;Somewhat&quot;,&quot;Completely&quot;], &amp;#10;tickMarks=None, &amp;#10;showValue=False,&amp;#10;showAccept=True,&amp;#10;acceptPreText='Click a value', &amp;#10;acceptText='Accept?', &amp;#10;acceptSize=1.0,&amp;#10;tickHeight=1.0, &amp;#10;marker='slider',&amp;#10;markerStart=4, &amp;#10;textSize=1.0,&amp;#10;stretch = 1.5, &amp;#10;textColor='Black', &amp;#10;textFont='Helvetica Bold',&amp;#10;disappear=True" valType="str"/>
        <Param name="disappear" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="high" updates="constant" val="7" valType="code"/>
        <Param name="labels" updates="constant" val="Not at all, Completely" valType="str"/>
        <Param name="low" updates="constant" val="1" valType="code"/>
        <Param name="marker" updates="constant" val="triangle" valType="str"/>
        <Param name="markerStart" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="AMP_nonword_rating" valType="code"/>
        <Param name="pos" updates="constant" val="0, 0" valType="str"/>
        <Param name="scaleDescription" updates="constant" val="To what extent did you base your ratings on the nonsense words?" valType="str"/>
        <Param name="showAccept" updates="constant" val="False" valType="bool"/>
        <Param name="singleClick" updates="constant" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="2.0" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="10" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="tickHeight" updates="constant" val="" valType="str"/>
        <Param name="visualAnalogScale" updates="constant" val="False" valType="bool"/>
      </RatingScaleComponent>
      <RatingScaleComponent name="AMP_word_rating">
        <Param name="categoryChoices" updates="constant" val="" valType="str"/>
        <Param name="customize_everything" updates="constant" val="scale = &quot;To what extent did you base your ratings on the words that appeared before the nonsense words?&quot;,&amp;#10;choices=None, &amp;#10;low=1, &amp;#10;high=7, &amp;#10;pos=[0,0],&amp;#10;precision=1, &amp;#10;labels=[&quot;Not at all&quot;,&quot;Somewhat&quot;,&quot;Completely&quot;], &amp;#10;tickMarks=None, &amp;#10;showValue=False,&amp;#10;showAccept=True,&amp;#10;acceptPreText='Click a value', &amp;#10;acceptText='Accept?', &amp;#10;acceptSize=1.0,&amp;#10;tickHeight=1.0, &amp;#10;marker='slider',&amp;#10;markerStart=4, &amp;#10;textSize=1.0,&amp;#10;stretch = 1.5, &amp;#10;textColor='Black', &amp;#10;textFont='Helvetica Bold',&amp;#10;disappear=True" valType="str"/>
        <Param name="disappear" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="high" updates="constant" val="7" valType="code"/>
        <Param name="labels" updates="constant" val="Not at all, Completely" valType="str"/>
        <Param name="low" updates="constant" val="1" valType="code"/>
        <Param name="marker" updates="constant" val="triangle" valType="str"/>
        <Param name="markerStart" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="AMP_word_rating" valType="code"/>
        <Param name="pos" updates="constant" val="0, 0" valType="str"/>
        <Param name="scaleDescription" updates="constant" val="To what extent did you base your ratings on the nonsense words?" valType="str"/>
        <Param name="showAccept" updates="constant" val="False" valType="bool"/>
        <Param name="singleClick" updates="constant" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="2.0" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="$AMP_nonword_rating.status==FINISHED" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="tickHeight" updates="constant" val="" valType="str"/>
        <Param name="visualAnalogScale" updates="constant" val="False" valType="bool"/>
      </RatingScaleComponent>
      <RatingScaleComponent name="AMP_random_rating">
        <Param name="categoryChoices" updates="constant" val="" valType="str"/>
        <Param name="customize_everything" updates="constant" val="scale = &quot;To what extent did you respond randomly in this task?&quot;,&amp;#10;choices=None, &amp;#10;low=1, &amp;#10;high=7, &amp;#10;pos=[0,0],&amp;#10;precision=1, &amp;#10;labels=[&quot;Not at all&quot;,&quot;Somewhat&quot;,&quot;Completely&quot;], &amp;#10;tickMarks=None, &amp;#10;showValue=False,&amp;#10;showAccept=True,&amp;#10;acceptPreText='Click a value', &amp;#10;acceptText='Accept?', &amp;#10;acceptSize=1.0,&amp;#10;tickHeight=1.0, &amp;#10;marker='slider',&amp;#10;markerStart=4, &amp;#10;textSize=1.0,&amp;#10;stretch = 1.5, &amp;#10;textColor='Black', &amp;#10;textFont='Helvetica Bold',&amp;#10;disappear=True" valType="str"/>
        <Param name="disappear" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="high" updates="constant" val="7" valType="code"/>
        <Param name="labels" updates="constant" val="Not at all, Completely" valType="str"/>
        <Param name="low" updates="constant" val="1" valType="code"/>
        <Param name="marker" updates="constant" val="triangle" valType="str"/>
        <Param name="markerStart" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="AMP_random_rating" valType="code"/>
        <Param name="pos" updates="constant" val="0, 0" valType="str"/>
        <Param name="scaleDescription" updates="constant" val="To what extent did you base your ratings on the nonsense words?" valType="str"/>
        <Param name="showAccept" updates="constant" val="False" valType="bool"/>
        <Param name="singleClick" updates="constant" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="2.0" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$AMP_word_rating.status==FINISHED" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="tickHeight" updates="constant" val="" valType="str"/>
        <Param name="visualAnalogScale" updates="constant" val="False" valType="bool"/>
      </RatingScaleComponent>
      <TextComponent name="AMP_feedback_instr">
        <Param name="color" updates="constant" val="#212121" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Verdana" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="AMP_feedback_instr" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="10" valType="code"/>
        <Param name="text" updates="constant" val="You will now respond to a few questions. Please note that your responses to these questions are completely anonymous and will not affect your SONA credit in any way." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="LDT_feedback">
      <RatingScaleComponent name="LDT_rating">
        <Param name="categoryChoices" updates="constant" val="" valType="str"/>
        <Param name="customize_everything" updates="constant" val="scale = &quot;To what extent did you respond randomly in this task?&quot;,&amp;#10;choices=None, &amp;#10;low=1, &amp;#10;high=7, &amp;#10;pos=[0,0],&amp;#10;precision=1, &amp;#10;labels=[&quot;Not at all&quot;,&quot;Somewhat&quot;,&quot;Completely&quot;], &amp;#10;tickMarks=None, &amp;#10;showValue=False,&amp;#10;showAccept=True,&amp;#10;acceptPreText='Click a value', &amp;#10;acceptText='Accept?', &amp;#10;acceptSize=1.0,&amp;#10;tickHeight=1.0, &amp;#10;marker='slider',&amp;#10;markerStart=4, &amp;#10;textSize=1.0,&amp;#10;stretch = 1.5, &amp;#10;textColor='Black', &amp;#10;textFont='Helvetica Bold',&amp;#10;disappear=True" valType="str"/>
        <Param name="disappear" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="high" updates="constant" val="7" valType="code"/>
        <Param name="labels" updates="constant" val="Not at all, Completely" valType="str"/>
        <Param name="low" updates="constant" val="1" valType="code"/>
        <Param name="marker" updates="constant" val="triangle" valType="str"/>
        <Param name="markerStart" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="LDT_rating" valType="code"/>
        <Param name="pos" updates="constant" val="0, 0" valType="str"/>
        <Param name="scaleDescription" updates="constant" val="To what extent did you base your ratings on the nonsense words?" valType="str"/>
        <Param name="showAccept" updates="constant" val="False" valType="bool"/>
        <Param name="singleClick" updates="constant" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="2.0" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="storeHistory" updates="constant" val="False" valType="bool"/>
        <Param name="storeRating" updates="constant" val="True" valType="bool"/>
        <Param name="storeRatingTime" updates="constant" val="True" valType="bool"/>
        <Param name="tickHeight" updates="constant" val="" valType="str"/>
        <Param name="visualAnalogScale" updates="constant" val="False" valType="bool"/>
      </RatingScaleComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="hold"/>
    <Routine name="instr1"/>
    <Routine name="instr_AMP"/>
    <LoopInitiator loopType="TrialHandler" name="AMP_prac_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('words', 'car'), ('nonwords', 'cemtuper'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'banana'), ('nonwords', 'kacket'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'keyboard'), ('nonwords', 'senk'), ('masks', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'scarf'), ('nonwords', 'bisebell'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="condition_files/amp_testrun.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="AMP_prac_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix"/>
    <Routine name="AMP_prac_word"/>
    <Routine name="AMP_nonword_prac"/>
    <LoopTerminator name="AMP_prac_loop"/>
    <Routine name="instr_AMP_2"/>
    <Routine name="instr_AMP_3"/>
    <LoopInitiator loopType="TrialHandler" name="AMP_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'accused'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'esquisiteness')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'violations'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'baladroit')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'groups'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lachelor')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'powerful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tomedians')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'useful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'imebreaker')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'blamed'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fangsters')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'good'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'crinking')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'torture'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sliptery')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'papert'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'vicissifude')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'troops'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'honstables')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'injured'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'mih')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'corruption'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'aubos')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'civilians'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'allears')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'credit'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'totalestic')]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'positive'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'openet')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'abuse'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'drumbled')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'peaceful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'seachwear')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'promises'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fonderland')]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'negative'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'oam')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'sexual'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'feleological')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'disregord'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gournful')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'clean'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gillipede')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'sharing'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sowntrodden')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'sfumatoy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gusinesslike')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'menizen'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ugeasily')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'officers'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pullness')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'black'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'taxpayung')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rejected'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'letish')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'great'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'erks')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'increase'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'smapper')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'saned'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sgrawl')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'strength'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framatic')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'party'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framo')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'free'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ittutable')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'support'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Boeinf')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'discovars'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Oregoniuns')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'gun'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'rivernoat')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'honored'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fostet')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'suicide'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hescribe')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'progress'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'neutralust')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'epigrach'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'proached')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'protect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lempestuous')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'improve'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tabin')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'hope'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'slavery'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gazily')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'terrorist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'idexpressible')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'peace'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'glacenta')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'friends'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sickyay')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'love'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'erdest')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'fighters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'perified')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'arrests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'dignity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'unreflectuve')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'drug'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'atson')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'values'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', &quot;counpy's&quot;)]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'fear'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chared')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'crime'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'halaise')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victim'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reviked')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'integrity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'greaks')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'dramens'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'brotesque')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'charges'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hatigue')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'interests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'bycled')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'safety'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'godlaness')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'harassment'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chadows')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'growth'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pescinded')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'attacks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dormandi')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'encourage'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'cromiscuity')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'faith'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ebbitter')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'prosecution'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'quarterbocks')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'hasks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'thabbily')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'prison'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'faspberry')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'hate'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sidearbs')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'army'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'frojecting')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'ensure'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'forced'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'lies'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'energy'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'health'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victims'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'ability'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rebels'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'uller'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'perfect'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'faith'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'imebreaker')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'growth'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'clean'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sliptery')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'army'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'neutralust')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'slavery'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'seachwear')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'protect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tomedians')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'sharing'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'greaks')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'prison'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'smapper')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'epigrach'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Oregoniuns')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'terrorist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lachelor')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'support'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fangsters')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'useful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'quarterbocks')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'charges'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'openet')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victim'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'perified')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'sfumatoy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ugeasily')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'troops'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'esquisiteness')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'dignity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'frojecting')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'love'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'rivernoat')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rejected'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'totalestic')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'suicide'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sgrawl')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'party'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gazily')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'peaceful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sickyay')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'hate'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gournful')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'groups'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'faspberry')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'free'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pescinded')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'values'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chared')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'energy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chadows')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'crime'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'brotesque')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'fighters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'honstables')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'promises'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hescribe')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'saned'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tabin')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'arrests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reviked')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'ability'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gusinesslike')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rebels'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'feleological')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'peace'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sidearbs')]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'positive'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'sexual'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', &quot;counpy's&quot;)]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'credit'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'bycled')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'civilians'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fonderland')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'ensure'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Boeinf')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victims'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framatic')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'abuse'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'letish')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'powerful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'erdest')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'gun'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ittutable')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'black'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'oam')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'interests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'halaise')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'fear'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'taxpayung')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'forced'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'vicissifude')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'violations'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hatigue')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'attacks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'drumbled')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'health'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'erks')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'hope'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sowntrodden')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'increase'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framo')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'injured'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'aubos')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'safety'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'proached')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'friends'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pullness')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'uller'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'crinking')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'harassment'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'idexpressible')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'progress'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'godlaness')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'drug'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'thabbily')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'improve'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gillipede')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'blamed'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'allears')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'menizen'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'mih')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'corruption'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'baladroit')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'hasks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'glacenta')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'accused'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fostet')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'good'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'atson')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'papert'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'unreflectuve')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'disregord'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dormandi')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'dramens'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ebbitter')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'lies'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'cromiscuity')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'honored'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lempestuous')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'integrity'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'officers'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'great'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'torture'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'encourage'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'negative'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'prosecution'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'strength'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'discovars'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'perfect'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'suicide'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'openet')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'drug'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'quarterbocks')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'protect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sliptery')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'groups'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reviked')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'attacks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lachelor')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'officers'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'atson')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'discovars'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sickyay')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'prosecution'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sowntrodden')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'crime'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'brotesque')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'support'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'unreflectuve')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victim'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ittutable')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'gun'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'aubos')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'ensure'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'letish')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'friends'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tomedians')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'violations'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'esquisiteness')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'sfumatoy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hatigue')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'lies'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'halaise')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'hope'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'crinking')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'disregord'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Oregoniuns')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'dignity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'imebreaker')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'safety'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'mih')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'sharing'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'troops'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'totalestic')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'clean'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'vicissifude')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'great'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ugeasily')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'civilians'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'glacenta')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'perfect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'perified')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'abuse'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sgrawl')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'free'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tabin')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'fear'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'baladroit')]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'negative'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pullness')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'fighters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', &quot;counpy's&quot;)]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'integrity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framatic')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'honored'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'seachwear')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'corruption'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'proached')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'progress'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'thabbily')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'peaceful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'cromiscuity')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'faith'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chadows')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'accused'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'godlaness')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'blamed'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chared')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rejected'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'oam')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'dramens'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Boeinf')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'charges'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sidearbs')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'ability'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pescinded')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'menizen'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fonderland')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'good'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'drumbled')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'credit'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'greaks')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'improve'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'bycled')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'sexual'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lempestuous')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'love'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fostet')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'encourage'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'prison'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'taxpayung')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'strength'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'rivernoat')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'torture'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gusinesslike')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'health'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gournful')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'values'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framo')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'slavery'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'honstables')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'terrorist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'allears')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victims'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'idexpressible')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'hasks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dormandi')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'arrests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'erdest')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'harassment'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'neutralust')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'growth'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hescribe')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'uller'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'faspberry')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'promises'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gillipede')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'powerful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'smapper')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'saned'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'erks')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'army'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ebbitter')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'interests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'frojecting')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'increase'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'feleological')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'epigrach'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gazily')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'party'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fangsters')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'forced'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rebels'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'black'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'papert'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'positive'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'peace'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'hate'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'injured'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'energy'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'useful'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'prison'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'frojecting')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'attacks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'neutralust')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'epigrach'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'bycled')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'accused'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'baladroit')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'health'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chadows')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'peace'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'dormandi')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'menizen'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'halaise')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'troops'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'mih')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'slavery'), ('masks', '&amp;&amp;&amp;&amp;'), ('nonwords', 'erks')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'abuse'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'aubos')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'progress'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Oregoniuns')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'injured'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gazily')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'black'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ittutable')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'officers'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'honstables')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rejected'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tomedians')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'promises'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'unreflectuve')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'hate'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ebbitter')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'strength'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'perified')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'good'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'smapper')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'terrorist'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'chared')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'charges'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', &quot;counpy's&quot;)]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'integrity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'Boeinf')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'sfumatoy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'rivernoat')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'perfect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sgrawl')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'harassment'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'openet')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'great'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'feleological')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'rebels'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sowntrodden')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'violations'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framatic')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'saned'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'positive'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fonderland')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'dignity'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'seachwear')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'support'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'reviked')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'torture'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'erdest')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'civilians'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sliptery')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'fear'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hescribe')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'ability'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'esquisiteness')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'papert'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'atson')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'dramens'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'totalestic')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'suicide'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pescinded')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'blamed'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'brotesque')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'protect'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'quarterbocks')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victims'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gillipede')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'growth'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'proached')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'clean'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'glacenta')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'uller'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sidearbs')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'gun'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fostet')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'values'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'letish')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'hasks'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'crinking')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'groups'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'tabin')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'hope'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lempestuous')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'sharing'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'pullness')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'powerful'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'shoirmaster')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'prosecution'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gusinesslike')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'drug'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'gournful')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'crime'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'ugeasily')]), OrderedDict([('category', 'care.vice'), ('corr_ans', 'right'), ('words', 'victim'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'sickyay')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'faith'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'greaks')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'fighters'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'godlaness')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'disregord'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'fangsters')]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'lies'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'taxpayung')]), OrderedDict([('category', 'authority.vice'), ('corr_ans', 'right'), ('words', 'arrests'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'allears')]), OrderedDict([('category', 'loyalty.vice'), ('corr_ans', 'right'), ('words', 'army'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'faspberry')]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'honored'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'vicissifude')]), OrderedDict([('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('words', 'energy'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'cromiscuity')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'party'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'lachelor')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'friends'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'imebreaker')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'credit'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'hatigue')]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'increase'), ('masks', '&amp;&amp;&amp;'), ('nonwords', 'oam')]), OrderedDict([('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('words', 'love'), ('masks', '&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'framo')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'sexual'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'thabbily')]), OrderedDict([('category', 'nonword'), ('corr_ans', None), ('words', 'discovars'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'idexpressible')]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'ensure'), ('masks', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;'), ('nonwords', 'drumbled')]), OrderedDict([('category', 'sanctity.vice'), ('corr_ans', 'right'), ('words', 'corruption'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'useful'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.vice'), ('corr_ans', 'right'), ('words', 'forced'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'free'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'safety'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'peaceful'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'authority.virtue'), ('corr_ans', 'left'), ('words', 'encourage'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'control'), ('corr_ans', None), ('words', 'negative'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'fairness.virtue'), ('corr_ans', 'left'), ('words', 'interests'), ('masks', None), ('nonwords', None)]), OrderedDict([('category', 'care.virtue'), ('corr_ans', 'left'), ('words', 'improve'), ('masks', None), ('nonwords', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="condition_files/AMP_conditions.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="AMP_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix"/>
    <Routine name="AMP_word"/>
    <Routine name="AMP_nonword"/>
    <LoopTerminator name="AMP_trials"/>
    <Routine name="AMP_feedback"/>
    <Routine name="instr_LDT"/>
    <LoopInitiator loopType="TrialHandler" name="LDT_prac_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('words', 'keyboard'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'bisebell'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="condition_files/ldt_testrun.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="LDT_prac_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="LDT_fix_prac"/>
    <Routine name="LDT_prac"/>
    <LoopTerminator name="LDT_prac_loop"/>
    <Routine name="instr_LDT_2"/>
    <LoopInitiator loopType="TrialHandler" name="LDT_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('words', 'care'), ('corr_ans', 'left'), ('category', 'care.virtue'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'health'), ('corr_ans', 'left'), ('category', 'care.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'compassion'), ('corr_ans', 'left'), ('category', 'care.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'improve'), ('corr_ans', 'left'), ('category', 'care.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'restore'), ('corr_ans', 'left'), ('category', 'care.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'death'), ('corr_ans', 'left'), ('category', 'care.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'violence'), ('corr_ans', 'left'), ('category', 'care.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'died'), ('corr_ans', 'left'), ('category', 'care.vice'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'torture'), ('corr_ans', 'left'), ('category', 'care.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'victim'), ('corr_ans', 'left'), ('category', 'care.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'free'), ('corr_ans', 'left'), ('category', 'fairness.virtue'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'benefit'), ('corr_ans', 'left'), ('category', 'fairness.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'agreement'), ('corr_ans', 'left'), ('category', 'fairness.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'win'), ('corr_ans', 'left'), ('category', 'fairness.virtue'), ('mask', '&amp;&amp;&amp;')]), OrderedDict([('words', 'promises'), ('corr_ans', 'left'), ('category', 'fairness.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'crime'), ('corr_ans', 'left'), ('category', 'fairness.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hate'), ('corr_ans', 'left'), ('category', 'fairness.vice'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'lies'), ('corr_ans', 'left'), ('category', 'fairness.vice'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'charges'), ('corr_ans', 'left'), ('category', 'fairness.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'terrorists'), ('corr_ans', 'left'), ('category', 'fairness.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'love'), ('corr_ans', 'left'), ('category', 'loyalty.virtue'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'friends'), ('corr_ans', 'left'), ('category', 'loyalty.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'loyalty'), ('corr_ans', 'left'), ('category', 'loyalty.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hope'), ('corr_ans', 'left'), ('category', 'loyalty.virtue'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'praised'), ('corr_ans', 'left'), ('category', 'loyalty.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'terrorist'), ('corr_ans', 'left'), ('category', 'loyalty.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'ban'), ('corr_ans', 'left'), ('category', 'loyalty.vice'), ('mask', '&amp;&amp;&amp;')]), OrderedDict([('words', 'failure'), ('corr_ans', 'left'), ('category', 'loyalty.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'troops'), ('corr_ans', 'left'), ('category', 'loyalty.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'blamed'), ('corr_ans', 'left'), ('category', 'loyalty.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'trust'), ('corr_ans', 'left'), ('category', 'authority.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'useful'), ('corr_ans', 'left'), ('category', 'authority.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'honored'), ('corr_ans', 'left'), ('category', 'authority.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'ability'), ('corr_ans', 'left'), ('category', 'authority.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'progress'), ('corr_ans', 'left'), ('category', 'authority.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'gun'), ('corr_ans', 'left'), ('category', 'authority.vice'), ('mask', '&amp;&amp;&amp;')]), OrderedDict([('words', 'penalty'), ('corr_ans', 'left'), ('category', 'authority.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'rejected'), ('corr_ans', 'left'), ('category', 'authority.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'prosecution'), ('corr_ans', 'left'), ('category', 'authority.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'refused'), ('corr_ans', 'left'), ('category', 'authority.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'freedom'), ('corr_ans', 'left'), ('category', 'sanctity.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'respect'), ('corr_ans', 'left'), ('category', 'sanctity.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'commitment'), ('corr_ans', 'left'), ('category', 'sanctity.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hand'), ('corr_ans', 'left'), ('category', 'sanctity.virtue'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'perfect'), ('corr_ans', 'left'), ('category', 'sanctity.virtue'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'abuse'), ('corr_ans', 'left'), ('category', 'sanctity.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'racist'), ('corr_ans', 'left'), ('category', 'sanctity.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'sexual'), ('corr_ans', 'left'), ('category', 'sanctity.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'war'), ('corr_ans', 'left'), ('category', 'sanctity.vice'), ('mask', '&amp;&amp;&amp;')]), OrderedDict([('words', 'corruption'), ('corr_ans', 'left'), ('category', 'sanctity.vice'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'latterly'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hereby'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'forty'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'although'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'whereafter'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'also'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'wherever'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'either'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'about'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'everything'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'three'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'fifty'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hence'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'amount'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'latter'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'amoungst'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'whither'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'each'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'thru'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'could'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'myself'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'fifteen'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'eight'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'less'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'elsewhere'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'couldnt'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'besides'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'even'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'both'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'towards'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'give'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'done'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'noone'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'therefore'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'with'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'else'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'toward'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'anything'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'somehow'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'least'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'were'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'there'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'been'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'front'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'mostly'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'seem'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'itself'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'further'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'anyhow'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'become'), ('corr_ans', 'left'), ('category', 'neutral'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'idexpressible'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'honstables'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'cromiscuity'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'discovars'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'noped'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'fontacts'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'aubos'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'lursuer'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'gikely'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'gationwide'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'reviked'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'slending'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'neneficence'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'mecan'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'ugeasily'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'gusinesslike'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'mih'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;')]), OrderedDict([('words', 'galamitous'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'sidearbs'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'refuejing'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'Phintoism'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'erdest'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'crinking'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'ilportation'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'thadowed'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'allears'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'taxpayung'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'unscothed'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'tislay'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'asn'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;')]), OrderedDict([('words', 'forepo'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'reelectiob'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'glacenta'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'scock'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'atson'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'gowlands'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'Daptist'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'Loorish'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'egpeditious'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'tracious'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'pafer'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'divility'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'suggists'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'photocalkodes'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'gaultless'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'metibolic'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'lorthwhile'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'uller'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'crilfully'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'fegard'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'emports'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'emassion'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'yane'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'disregord'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'lenon'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hasks'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'strofe'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'rorroborated'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'unreflectuve'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'smapper'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'baklara'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'fangsters'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'coom'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'antral'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'ammessment'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'scalbel'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'dramens'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'prones'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'sowntrodden'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', &quot;counpy's&quot;), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'ronviolence'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'lempestuous'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'precificity'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'fornicalion'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'Lacedonia'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'greaks'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'frojecting'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'pescinded'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'hefurbished'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'drumbled'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'shoirmaster'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'juck'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'bruthfulness'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'iptervention'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'tove'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'dumid'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'leact'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'frocessing'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'wump'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'Boeinf'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'elduringly'), ('corr_ans', 'right'), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'saned'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'Cunday'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'bycled'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'edancipation'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'spag'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'viscs'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'chressing'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'sonvoy'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;')]), OrderedDict([('words', 'dormandi'), ('corr_ans', None), ('category', 'nonword'), ('mask', '&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="condition_files/LDT_conditions.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="LDT_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fix"/>
    <Routine name="LDT_trial"/>
    <LoopTerminator name="LDT_loop"/>
    <Routine name="LDT_feedback"/>
    <Routine name="instr_tweets"/>
    <LoopInitiator loopType="TrialHandler" name="tweet_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('tweets', '@yokoono Over 1,100,000 people killed by guns in the USA since @JohnLennon was shot and killed on Dec 8 1980 #StopGunViolence'), ('category', 'care.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweets', &quot;@toad comments on Tina Marshall's anniversary and asks for public's help as he looks at new gun safety actions&quot;), ('category', 'care.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweets', '@qarty But Mr. Sanders, in a free country, our guns should be free to have a terrorist. #gunsanity #gunsense'), ('category', 'fairness.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweets', '@jiordan Most gun control laws are ineffective at stopping crime'), ('category', 'fairness.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweets', '@bob35 Retweet if you support the Second Amendment!'), ('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweets', &quot;@laurien The Second Amendment must go: We ban lawn darts. It's time to ban guns&quot;), ('category', 'loyalty.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweets', '@york We have an obligation to end #gunviolence'), ('category', 'authority.virtue'), ('corr_ans', 'left'), ('topic', 'gun\xa0')]), OrderedDict([('tweets', &quot;@sabrina49 Gun bans don't disarm criminals, gun bans attract them&quot;), ('category', 'authority.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweets', '@helena_roy Faith and advocacy groups hosting vigils to end gun violence this week'), ('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('topic', 'gun')]), OrderedDict([('tweets', &quot;@adoesch Don't condemn Islam for these two terrorists, but do condemn all law-abiding gun owners because of the guns they used&quot;), ('category', 'sanctity.vice'), ('corr_ans', 'right'), ('topic', 'gun')]), OrderedDict([('tweets', '@tlocke: Millennials care about climate change, conservatives should too'), ('category', 'care.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweets', '@JoYce 24hrs after #Paris attacks @thomas_dune says climate change is biggest threat to national security'), ('category', 'care.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweets', '@AGSchneiderman Companies must be honest about climate change risks.\xa0'), ('category', 'fairness.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweets', '@NRDC: Exxon Under Criminal Investigation over Lying About Climate Change'), ('category', 'fairness.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweets', '@Jkmolly Retweet if you support American leadership on climate change'), ('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweets', '@PoliticsFairfax Most Coalition voters reject humans to blame for climate change'), ('category', 'loyalty.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweets', '@c40cities Cites are committing to take local action to strengthen national commitments to fighting #climatechange'), ('category', 'authority.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweets', '@MEAIndia The two main challenges facing the world today are terrorism and global warming'), ('category', 'authority.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweets', &quot;@FEdwards We should respect worker's rights, respect the right to organize, and fight climate change&quot;), ('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('topic', 'climate')]), OrderedDict([('tweets', '@AmblRay As climate change reduces resources, women travel farther to collect water and firewood, increasing risk of sexual violence.'), ('category', 'sanctity.vice'), ('corr_ans', 'right'), ('topic', 'climate')]), OrderedDict([('tweets', '@HPPics Newly married Richard Cormac kiss after the first ever same sex marriage in Ireland'), ('category', 'care.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweets', '@WGNNews Utah same-sex couple fighting judge who removed foster child to place with heterosexual couple'), ('category', 'care.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweets', '@MelisaHary How can we truly achieve equality when religions are exempt from adhering to legislation around same-sex adoption?'), ('category', 'fairness.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweets', &quot;@PinkNews Northern Irish DUP accused of 'abusing' peace process to block same-sex marriage&quot;), ('category', 'fairness.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweets', '@RKaB Thank you @repAdk for your support of the #EqualityAct! #LoveWins'), ('category', 'loyalty.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweets', '@TheLastWord The Mormon Church places a ban on church activities for children of same-sex couples'), ('category', 'loyalty.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweets', '@BelTel Same-sex marriages signed into law in Republic of Ireland'), ('category', 'authority.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweets', &quot;@PinkNews Northern Irish DUP faces protests after 'abusing' peace powers to veto same-sex marriage&quot;), ('category', 'authority.vice'), ('corr_ans', 'right'), ('topic', 'marriage')]), OrderedDict([('tweets', &quot;@ginatrapani Kids raised by same-sex parents often happier &amp; healthier b/c parents don't fall into default gender roles.&quot;), ('category', 'sanctity.virtue'), ('corr_ans', 'left'), ('topic', 'marriage')]), OrderedDict([('tweets', '@Aisas_Raan According to the 2015 @ILGAWORLD State Sponsored Homophobia report, 75 countries criminalise same-sex sexual acts.'), ('category', 'sanctity.vice'), ('corr_ans', 'right'), ('topic', 'marriage')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="condition_files/tweets.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="tweet_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="tweets"/>
    <LoopTerminator name="tweet_loop"/>
  </Flow>
</PsychoPy2experiment>
